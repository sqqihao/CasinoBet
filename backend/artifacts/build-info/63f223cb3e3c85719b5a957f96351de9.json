{"id":"63f223cb3e3c85719b5a957f96351de9","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        return _roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/Bank.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IBank {\n    function addFunds(address _addr, uint256 _amount) external ;\n    function subFunds(address _addr, uint256 _amount) external ;\n    function deposit() external payable ;\n    function withDraw(uint256 _amount) external ;\n    function balanceOf(address _addr) external returns(uint256);\n}\ncontract Bank is Ownable{\n    // bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n    // bytes32 public constant OPERATOR = keccak256(\"OPERATOR\");\n\n    mapping(address => uint256) private funds;\n    address[] public allowedCallers;\n\n    event WithDraw(address _addr, uint256 _amount);\n    event Deposit(address _addr, uint256 _amount);\n\n    constructor() Ownable(msg.sender){\n        // 将部署者赋予 ADMIN 设置为 OPERATOR 的管理员角色\n        // _setRoleAdmin(OPERATOR, ADMIN);\n        // 当前sender赋予管理角色\n        // _grantRole(ADMIN, msg.sender);\n    }\n\n    function setAllowCaller (address _allowedCaller) public onlyOwner() {\n        allowedCallers.push(_allowedCaller);\n    }\n\n    modifier onlyAllowedCaller() {\n        //require(msg.sender == allowedCaller, \"Access denied: Caller is not the allowed contract\");\n        bool allow = false;\n        for(uint8 i=0; i<allowedCallers.length;i++){\n            if(msg.sender == allowedCallers[i])allow=true;\n        }\n        require(allow, \"Access denied: Caller is not the allowed contract\");\n        _;\n    }\n    function addFunds(address _addr, uint256 _amount) public onlyAllowedCaller(){// onlyRole(ADMIN) { \n        funds[_addr] = funds[_addr] + _amount;\n    }\n    function subFunds(address _addr, uint256 _amount) public  onlyAllowedCaller(){//onlyRole(ADMIN) {\n        funds[_addr] = funds[_addr] - _amount;\n    }\n    function balanceOf(address _addr) external view returns(uint256) {\n        return funds[_addr];  \n    }\n    function withDraw(uint256 _amount) external {\n        require(_amount>0 ,\"amount to small\");\n        require(funds[msg.sender]>_amount,\"no enougth amount\");\n        funds[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n        emit WithDraw(msg.sender, _amount);\n    }\n    function deposit() external payable{\n        require(msg.value>0 ,\"amount to small\");\n        funds[msg.sender] += msg.value;\n        emit Deposit(msg.sender, msg.value);\n    }\n}"},"contracts/Roulette.sol":{"content":"pragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./Bank.sol\";\ncontract Roulette is Ownable {\n    //bank必须是内部的，不能通过外部调用\n    Bank public bank;\n    struct Bet {\n        address beter;\n        uint256 bet_type;\n        uint256 bet_time;\n        uint256 bet_num;\n        uint256 bet_amounts;\n    }\n    Bet[] public bets;\n    uint256[] public rolleds;\n\n    event PlaceBet (\n        Bet bet\n    );\n    event WinFund(address addr,uint256 amounts);\n\n    constructor(address _addr)  Ownable(msg.sender){\n        bank = Bank(_addr);\n    }\n    \n    function place_bet(uint256 _bet_type, uint256 _bet_num, uint256 _bet_amounts) public {\n        Bet memory bet = Bet(\n            msg.sender,\n            _bet_type,\n            block.timestamp,\n            _bet_num,\n            _bet_amounts);\n\n        bets.push(bet);\n        bank.subFunds(msg.sender, _bet_amounts);\n        emit PlaceBet(bet);\n    }\n\n    function betsLength() external view returns(uint256){\n        return bets.length;\n    }\n    function getRollLength() external view returns(uint256){\n        return rolleds.length;\n    }\n\n    //Replace with chainlink\n    function _random(uint mod) internal view returns (uint) {\n        return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp))) % mod;\n    }\n\n    function _is_red(uint roll) internal pure returns (bool) {\n        if (roll < 11 || (roll > 18 && roll < 29)) {\n        // Red odd, black even\n            return roll % 2 == 1;\n        } else {\n            return roll % 2 == 0;\n        }\n    }\n    function calcWinner(Bet memory bet,uint256 _roll) public pure returns(uint256){\n        if(bet.bet_type == 0) {\n            // 0 = red, 1 = black\n            if (bet.bet_num == (_is_red(_roll) ? 0 : 1)) {\n                return bet.bet_amounts * 2;\n            }\n        }else if( bet.bet_type == 1) {\n            // 0 = even, 1 = odd\n            if (bet.bet_num == (_roll % 2)) {\n                return bet.bet_amounts * 2;\n            }\n        }\n        return 0;\n    }\n\n    function play() public  onlyOwner() {\n        uint256 _roll = _random(37);\n        rolleds.push(_roll);\n        for(uint i=0; i<bets.length; i++) {\n            uint256 winMoney = calcWinner(bets[i], _roll);\n            if(winMoney>0){\n                bank.addFunds(bets[i].beter, winMoney);\n                // bets[i].beter.\n                emit WinFund(bets[i].beter, winMoney);\n            }else{\n                //说明没有赢，所以不需要记录\n                // bank.addFunds(address(this), winMoney);\n                // emit WinFund(address(this), winMoney);\n            }\n        }\n        delete bets;\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Roulette.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Roulette.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"8417","formattedMessage":"Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n  --> contracts/Roulette.sol:49:48:\n   |\n49 |         return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp))) % mod;\n   |                                                ^^^^^^^^^^^^^^^^\n\n","message":"Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.","severity":"warning","sourceLocation":{"end":1301,"file":"contracts/Roulette.sol","start":1285},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[740],"ERC165":[764],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":741,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":765,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":740,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,764,776,378,740],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[763],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":763,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[740],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":741,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":740,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,740],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"EnumerableSet":[1389],"IAccessControlEnumerable":[710]},"id":685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:3"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":685,"sourceUnit":711,"src":"155:72:3","symbolAliases":[{"foreign":{"id":529,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"163:24:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":685,"sourceUnit":296,"src":"228:51:3","symbolAliases":[{"foreign":{"id":531,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"236:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":685,"sourceUnit":1390,"src":"280:68:3","symbolAliases":[{"foreign":{"id":533,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"288:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":536,"name":"IAccessControlEnumerable","nameLocations":["490:24:3"],"nodeType":"IdentifierPath","referencedDeclaration":710,"src":"490:24:3"},"id":537,"nodeType":"InheritanceSpecifier","src":"490:24:3"},{"baseName":{"id":538,"name":"AccessControl","nameLocations":["516:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"516:13:3"},"id":539,"nodeType":"InheritanceSpecifier","src":"516:13:3"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"350:94:3","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":684,"linearizedBaseContracts":[684,295,764,776,710,378,740],"name":"AccessControlEnumerable","nameLocation":"463:23:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":543,"libraryName":{"id":540,"name":"EnumerableSet","nameLocations":["542:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1389,"src":"542:13:3"},"nodeType":"UsingForDirective","src":"536:49:3","typeName":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:3","574:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"560:24:3"},"referencedDeclaration":1102,"src":"560:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":548,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:3","nodeType":"VariableDeclaration","scope":684,"src":"591:70:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":547,"keyName":"role","keyNameLocation":"607:4:3","keyType":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:3","629:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"615:24:3"},"referencedDeclaration":1102,"src":"615:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[62],"body":{"id":569,"nodeType":"Block","src":"820:121:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"837:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":559,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"857:24:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$710_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$710_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"852:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$710","typeString":"type(contract IAccessControlEnumerable)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":565,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"922:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":563,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"898:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$684_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"898:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":556,"id":568,"nodeType":"Return","src":"830:104:3"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"668:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:3","nodeType":"FunctionDefinition","overrides":{"id":553,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:3"},"parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:3","nodeType":"VariableDeclaration","scope":570,"src":"756:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:3"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"814:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:3"},"scope":684,"src":"729:212:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[701],"body":{"id":587,"nodeType":"Block","src":"1616:52:3","statements":[{"expression":{"arguments":[{"id":584,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1655:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":580,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1633:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":582,"indexExpression":{"id":581,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1646:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1225,"src":"1633:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1102_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1102_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":579,"id":586,"nodeType":"Return","src":"1626:35:3"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"947:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":588,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"role","nameLocation":"1557:4:3","nodeType":"VariableDeclaration","scope":588,"src":"1549:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"index","nameLocation":"1571:5:3","nodeType":"VariableDeclaration","scope":588,"src":"1563:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:3"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"1607:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:3"},"scope":684,"src":"1526:142:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[709],"body":{"id":602,"nodeType":"Block","src":"1916:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":596,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1933:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":598,"indexExpression":{"id":597,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1946:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:3","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"1933:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1102_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1102_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":595,"id":601,"nodeType":"Return","src":"1926:34:3"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1674:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"role","nameLocation":"1872:4:3","nodeType":"VariableDeclaration","scope":603,"src":"1864:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"1907:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:3"},"scope":684,"src":"1836:131:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"2595:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":612,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2612:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":614,"indexExpression":{"id":613,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2625:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2612:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:6:3","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"2612:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1102_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1102_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":611,"id":617,"nodeType":"Return","src":"2605:34:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1973:532:3","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"2519:14:3","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"role","nameLocation":"2542:4:3","nodeType":"VariableDeclaration","scope":619,"src":"2534:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2533:14:3"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":619,"src":"2577:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":609,"nodeType":"ArrayTypeName","src":"2577:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2576:18:3"},"scope":684,"src":"2510:136:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[256],"body":{"id":650,"nodeType":"Block","src":"2840:165:3","statements":[{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"granted","nameLocation":"2855:7:3","nodeType":"VariableDeclaration","scope":650,"src":"2850:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":630,"name":"bool","nodeType":"ElementaryTypeName","src":"2850:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":637,"initialValue":{"arguments":[{"id":634,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2882:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2888:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":632,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2865:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$684_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2871:10:3","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":256,"src":"2865:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2850:46:3"},{"condition":{"id":638,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2910:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":647,"nodeType":"IfStatement","src":"2906:69:3","trueBody":{"id":646,"nodeType":"Block","src":"2919:56:3","statements":[{"expression":{"arguments":[{"id":643,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2956:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":639,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2933:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":641,"indexExpression":{"id":640,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2946:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2933:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2952:3:3","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"2933:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1102_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1102_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":645,"nodeType":"ExpressionStatement","src":"2933:31:3"}]}},{"expression":{"id":648,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2991:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":629,"id":649,"nodeType":"Return","src":"2984:14:3"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2652:91:3","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":651,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2757:10:3","nodeType":"FunctionDefinition","overrides":{"id":626,"nodeType":"OverrideSpecifier","overrides":[],"src":"2816:8:3"},"parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"role","nameLocation":"2776:4:3","nodeType":"VariableDeclaration","scope":651,"src":"2768:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"account","nameLocation":"2790:7:3","nodeType":"VariableDeclaration","scope":651,"src":"2782:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2767:31:3"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2834:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":627,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2833:6:3"},"scope":684,"src":"2748:257:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[294],"body":{"id":682,"nodeType":"Block","src":"3201:169:3","statements":[{"assignments":[663],"declarations":[{"constant":false,"id":663,"mutability":"mutable","name":"revoked","nameLocation":"3216:7:3","nodeType":"VariableDeclaration","scope":682,"src":"3211:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":662,"name":"bool","nodeType":"ElementaryTypeName","src":"3211:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":669,"initialValue":{"arguments":[{"id":666,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"3244:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":667,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3250:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":664,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3226:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$684_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3232:11:3","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":294,"src":"3226:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3211:47:3"},{"condition":{"id":670,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3272:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":679,"nodeType":"IfStatement","src":"3268:72:3","trueBody":{"id":678,"nodeType":"Block","src":"3281:59:3","statements":[{"expression":{"arguments":[{"id":675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3321:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":671,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3295:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1102_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":673,"indexExpression":{"id":672,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"3308:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3295:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3314:6:3","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1156,"src":"3295:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1102_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1102_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":677,"nodeType":"ExpressionStatement","src":"3295:34:3"}]}},{"expression":{"id":680,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3356:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":661,"id":681,"nodeType":"Return","src":"3349:14:3"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"3011:92:3","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":683,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"3117:11:3","nodeType":"FunctionDefinition","overrides":{"id":658,"nodeType":"OverrideSpecifier","overrides":[],"src":"3177:8:3"},"parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"role","nameLocation":"3137:4:3","nodeType":"VariableDeclaration","scope":683,"src":"3129:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3129:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"account","nameLocation":"3151:7:3","nodeType":"VariableDeclaration","scope":683,"src":"3143:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3128:31:3"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"3195:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":659,"name":"bool","nodeType":"ElementaryTypeName","src":"3195:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3194:6:3"},"scope":684,"src":"3108:262:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":685,"src":"445:2927:3","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"129:3244:3"},"id":3},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[378],"IAccessControlEnumerable":[710]},"id":711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:4"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":711,"sourceUnit":379,"src":"156:53:4","symbolAliases":[{"foreign":{"id":687,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"164:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":690,"name":"IAccessControl","nameLocations":["350:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"350:14:4"},"id":691,"nodeType":"InheritanceSpecifier","src":"350:14:4"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"211:100:4","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":710,"linearizedBaseContracts":[710,378],"name":"IAccessControlEnumerable","nameLocation":"322:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"371:574:4","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:4","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"role","nameLocation":"981:4:4","nodeType":"VariableDeclaration","scope":701,"src":"973:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"index","nameLocation":"995:5:4","nodeType":"VariableDeclaration","scope":701,"src":"987:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"1025:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:4"},"scope":710,"src":"950:84:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"1040:157:4","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":709,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:4","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"role","nameLocation":"1238:4:4","nodeType":"VariableDeclaration","scope":709,"src":"1230:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:4"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":709,"src":"1267:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:4"},"scope":710,"src":"1202:74:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":711,"src":"312:966:4","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"130:1149:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[740]},"id":741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":712,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":740,"linearizedBaseContracts":[740],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":721,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":717,"id":720,"nodeType":"Return","src":"728:17:5"}]},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":740,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":726,"id":729,"nodeType":"Return","src":"835:15:5"}]},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":724,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":740,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":738,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":735,"id":737,"nodeType":"Return","src":"945:8:5"}]},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":740,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":741,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[764],"IERC165":[776]},"id":765,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":742,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":765,"sourceUnit":777,"src":"140:38:6","symbolAliases":[{"foreign":{"id":743,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":746,"name":"IERC165","nameLocations":["688:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":776,"src":"688:7:6"},"id":747,"nodeType":"InheritanceSpecifier","src":"688:7:6"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"180:479:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":764,"linearizedBaseContracts":[764,776],"name":"ERC165","nameLocation":"678:6:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[775],"body":{"id":762,"nodeType":"Block","src":"845:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":755,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"862:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":757,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"882:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$776_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$776_$","typeString":"type(contract IERC165)"}],"id":756,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$776","typeString":"type(contract IERC165)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":754,"id":761,"nodeType":"Return","src":"855:47:6"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"702:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":763,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:6","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:6","nodeType":"VariableDeclaration","scope":763,"src":"790:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":749,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:6"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"839:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":752,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:6"},"scope":764,"src":"763:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":765,"src":"660:251:6","usedErrors":[],"usedEvents":[]}],"src":"114:798:6"},"id":6},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[776]},"id":777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":766,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"141:280:7","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":776,"linearizedBaseContracts":[776],"name":"IERC165","nameLocation":"432:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"446:340:7","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":775,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:7","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:7","nodeType":"VariableDeclaration","scope":775,"src":"818:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":769,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:7"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"861:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":772,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:7"},"scope":776,"src":"791:76:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":777,"src":"422:447:7","usedErrors":[],"usedEvents":[]}],"src":"115:755:7"},"id":7},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[1389]},"id":1390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":778,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"231:1098:8","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1389,"linearizedBaseContracts":[1389],"name":"EnumerableSet","nameLocation":"1338:13:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":787,"members":[{"constant":false,"id":782,"mutability":"mutable","name":"_values","nameLocation":"1862:7:8","nodeType":"VariableDeclaration","scope":787,"src":"1852:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":781,"nodeType":"ArrayTypeName","src":"1852:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:8","nodeType":"VariableDeclaration","scope":787,"src":"2020:44:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":785,"keyName":"value","keyNameLocation":"2036:5:8","keyType":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:8","nodeType":"StructDefinition","scope":1389,"src":"1798:273:8","visibility":"public"},{"body":{"id":828,"nodeType":"Block","src":"2310:337:8","statements":[{"condition":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:8","subExpression":{"arguments":[{"id":799,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2335:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"2340:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":798,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2325:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":826,"nodeType":"Block","src":"2604:37:8","statements":[{"expression":{"hexValue":"66616c7365","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":797,"id":825,"nodeType":"Return","src":"2618:12:8"}]},"id":827,"nodeType":"IfStatement","src":"2320:321:8","trueBody":{"id":823,"nodeType":"Block","src":"2348:250:8","statements":[{"expression":{"arguments":[{"id":808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"2379:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":803,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2362:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"2362:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:8","memberName":"push","nodeType":"MemberAccess","src":"2362:16:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"2362:23:8"},{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":811,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2520:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:8","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":786,"src":"2520:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":815,"indexExpression":{"id":813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"2535:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":816,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2544:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"2544:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:8","memberName":"length","nodeType":"MemberAccess","src":"2544:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"2520:42:8"},{"expression":{"hexValue":"74727565","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":797,"id":822,"nodeType":"Return","src":"2576:11:8"}]}}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"2077:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":829,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:8","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"set","nameLocation":"2267:3:8","nodeType":"VariableDeclaration","scope":829,"src":"2255:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":790,"nodeType":"UserDefinedTypeName","pathNode":{"id":789,"name":"Set","nameLocations":["2255:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"2255:3:8"},"referencedDeclaration":787,"src":"2255:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"value","nameLocation":"2280:5:8","nodeType":"VariableDeclaration","scope":829,"src":"2272:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:8"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"2304:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:8"},"scope":1389,"src":"2241:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":912,"nodeType":"Block","src":"2887:1296:8","statements":[{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"position","nameLocation":"2999:8:8","nodeType":"VariableDeclaration","scope":912,"src":"2991:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":846,"initialValue":{"baseExpression":{"expression":{"id":842,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3010:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:8","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":786,"src":"3010:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":845,"indexExpression":{"id":844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"3025:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":847,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3046:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":910,"nodeType":"Block","src":"4140:37:8","statements":[{"expression":{"hexValue":"66616c7365","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":839,"id":909,"nodeType":"Return","src":"4154:12:8"}]},"id":911,"nodeType":"IfStatement","src":"3042:1135:8","trueBody":{"id":907,"nodeType":"Block","src":"3061:1073:8","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:8","nodeType":"VariableDeclaration","scope":907,"src":"3413:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":855,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3434:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:8"},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:8","nodeType":"VariableDeclaration","scope":907,"src":"3460:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":858,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3480:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"3480:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:8","memberName":"length","nodeType":"MemberAccess","src":"3480:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"3521:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":865,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3535:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":891,"nodeType":"IfStatement","src":"3517:378:8","trueBody":{"id":890,"nodeType":"Block","src":"3546:349:8","statements":[{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:8","nodeType":"VariableDeclaration","scope":890,"src":"3564:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":873,"initialValue":{"baseExpression":{"expression":{"id":869,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3584:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"3584:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":872,"indexExpression":{"id":871,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3596:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:8"},{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":874,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3705:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"3705:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":878,"indexExpression":{"id":876,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"3717:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":879,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"3731:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":881,"nodeType":"ExpressionStatement","src":"3705:35:8"},{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":882,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3844:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:8","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":786,"src":"3844:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":886,"indexExpression":{"id":884,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"3859:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":887,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3872:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"nodeType":"ExpressionStatement","src":"3844:36:8"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":892,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3973:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"3973:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:8","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"3973:17:8"},{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:8","subExpression":{"baseExpression":{"expression":{"id":899,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"4076:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:8","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":786,"src":"4076:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":902,"indexExpression":{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"4091:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"ExpressionStatement","src":"4069:28:8"},{"expression":{"hexValue":"74727565","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":839,"id":906,"nodeType":"Return","src":"4112:11:8"}]}}]},"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"2653:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:8","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"set","nameLocation":"2844:3:8","nodeType":"VariableDeclaration","scope":913,"src":"2832:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":832,"nodeType":"UserDefinedTypeName","pathNode":{"id":831,"name":"Set","nameLocations":["2832:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"2832:3:8"},"referencedDeclaration":787,"src":"2832:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"value","nameLocation":"2857:5:8","nodeType":"VariableDeclaration","scope":913,"src":"2849:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:8"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":913,"src":"2881:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":837,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:8"},"scope":1389,"src":"2815:1368:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":931,"nodeType":"Block","src":"4343:50:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":924,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"4360:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:8","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":786,"src":"4360:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":927,"indexExpression":{"id":926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"4375:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":923,"id":930,"nodeType":"Return","src":"4353:33:8"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"4189:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:8","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"set","nameLocation":"4295:3:8","nodeType":"VariableDeclaration","scope":932,"src":"4283:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":916,"nodeType":"UserDefinedTypeName","pathNode":{"id":915,"name":"Set","nameLocations":["4283:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"4283:3:8"},"referencedDeclaration":787,"src":"4283:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"value","nameLocation":"4308:5:8","nodeType":"VariableDeclaration","scope":932,"src":"4300:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:8"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"4337:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:8"},"scope":1389,"src":"4264:129:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":945,"nodeType":"Block","src":"4539:42:8","statements":[{"expression":{"expression":{"expression":{"id":941,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4556:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"4556:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:8","memberName":"length","nodeType":"MemberAccess","src":"4556:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":940,"id":944,"nodeType":"Return","src":"4549:25:8"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"4399:70:8","text":" @dev Returns the number of values on the set. O(1)."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:8","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"set","nameLocation":"4503:3:8","nodeType":"VariableDeclaration","scope":946,"src":"4491:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":935,"nodeType":"UserDefinedTypeName","pathNode":{"id":934,"name":"Set","nameLocations":["4491:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"4491:3:8"},"referencedDeclaration":787,"src":"4491:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:8"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"4530:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:8"},"scope":1389,"src":"4474:107:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":962,"nodeType":"Block","src":"4999:42:8","statements":[{"expression":{"baseExpression":{"expression":{"id":957,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5016:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"5016:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":960,"indexExpression":{"id":959,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"5028:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":956,"id":961,"nodeType":"Return","src":"5009:25:8"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"4587:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:8","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"set","nameLocation":"4948:3:8","nodeType":"VariableDeclaration","scope":963,"src":"4936:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":949,"nodeType":"UserDefinedTypeName","pathNode":{"id":948,"name":"Set","nameLocations":["4936:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"4936:3:8"},"referencedDeclaration":787,"src":"4936:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"index","nameLocation":"4961:5:8","nodeType":"VariableDeclaration","scope":963,"src":"4953:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:8"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"4990:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:8"},"scope":1389,"src":"4923:118:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":976,"nodeType":"Block","src":"5655:35:8","statements":[{"expression":{"expression":{"id":973,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5672:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":782,"src":"5672:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":972,"id":975,"nodeType":"Return","src":"5665:18:8"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"5047:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:8","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"set","nameLocation":"5610:3:8","nodeType":"VariableDeclaration","scope":977,"src":"5598:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":966,"nodeType":"UserDefinedTypeName","pathNode":{"id":965,"name":"Set","nameLocations":["5598:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"5598:3:8"},"referencedDeclaration":787,"src":"5598:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:8"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"5637:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":970,"nodeType":"ArrayTypeName","src":"5637:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:8"},"scope":1389,"src":"5581:109:8","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":981,"members":[{"constant":false,"id":980,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:8","nodeType":"VariableDeclaration","scope":981,"src":"5743:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":979,"nodeType":"UserDefinedTypeName","pathNode":{"id":978,"name":"Set","nameLocations":["5743:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"5743:3:8"},"referencedDeclaration":787,"src":"5743:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:8","nodeType":"StructDefinition","scope":1389,"src":"5715:45:8","visibility":"public"},{"body":{"id":998,"nodeType":"Block","src":"6006:47:8","statements":[{"expression":{"arguments":[{"expression":{"id":993,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6028:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":980,"src":"6028:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6040:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":992,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6023:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":991,"id":997,"nodeType":"Return","src":"6016:30:8"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"5766:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:8","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"set","nameLocation":"5962:3:8","nodeType":"VariableDeclaration","scope":999,"src":"5943:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":984,"nodeType":"UserDefinedTypeName","pathNode":{"id":983,"name":"Bytes32Set","nameLocations":["5943:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"5943:10:8"},"referencedDeclaration":981,"src":"5943:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"value","nameLocation":"5975:5:8","nodeType":"VariableDeclaration","scope":999,"src":"5967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:8"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"6000:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":989,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:8"},"scope":1389,"src":"5930:123:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1016,"nodeType":"Block","src":"6300:50:8","statements":[{"expression":{"arguments":[{"expression":{"id":1011,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"6325:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":980,"src":"6325:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6337:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1010,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"6317:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1009,"id":1015,"nodeType":"Return","src":"6310:33:8"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"6059:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:8","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"set","nameLocation":"6256:3:8","nodeType":"VariableDeclaration","scope":1017,"src":"6237:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1002,"nodeType":"UserDefinedTypeName","pathNode":{"id":1001,"name":"Bytes32Set","nameLocations":["6237:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"6237:10:8"},"referencedDeclaration":981,"src":"6237:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"value","nameLocation":"6269:5:8","nodeType":"VariableDeclaration","scope":1017,"src":"6261:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:8"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"6294:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1007,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:8"},"scope":1389,"src":"6221:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1034,"nodeType":"Block","src":"6517:52:8","statements":[{"expression":{"arguments":[{"expression":{"id":1029,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6544:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":980,"src":"6544:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"6556:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1028,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6534:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1027,"id":1033,"nodeType":"Return","src":"6527:35:8"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"6356:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:8","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"set","nameLocation":"6468:3:8","nodeType":"VariableDeclaration","scope":1035,"src":"6449:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"Bytes32Set","nameLocations":["6449:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"6449:10:8"},"referencedDeclaration":981,"src":"6449:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"6481:5:8","nodeType":"VariableDeclaration","scope":1035,"src":"6473:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:8"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"6511:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1025,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:8"},"scope":1389,"src":"6431:138:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1049,"nodeType":"Block","src":"6722:43:8","statements":[{"expression":{"arguments":[{"expression":{"id":1045,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"6747:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":980,"src":"6747:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1044,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6739:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1043,"id":1048,"nodeType":"Return","src":"6732:26:8"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"6575:70:8","text":" @dev Returns the number of values in the set. O(1)."},"id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"set","nameLocation":"6685:3:8","nodeType":"VariableDeclaration","scope":1050,"src":"6666:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1038,"nodeType":"UserDefinedTypeName","pathNode":{"id":1037,"name":"Bytes32Set","nameLocations":["6666:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"6666:10:8"},"referencedDeclaration":981,"src":"6666:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"6713:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:8"},"scope":1389,"src":"6650:115:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1067,"nodeType":"Block","src":"7190:46:8","statements":[{"expression":{"arguments":[{"expression":{"id":1062,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7211:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":980,"src":"7211:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1064,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"7223:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1061,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"7207:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1060,"id":1066,"nodeType":"Return","src":"7200:29:8"}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"6771:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:8","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"set","nameLocation":"7138:3:8","nodeType":"VariableDeclaration","scope":1068,"src":"7119:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1053,"nodeType":"UserDefinedTypeName","pathNode":{"id":1052,"name":"Bytes32Set","nameLocations":["7119:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"7119:10:8"},"referencedDeclaration":981,"src":"7119:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"index","nameLocation":"7151:5:8","nodeType":"VariableDeclaration","scope":1068,"src":"7143:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:8"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1068,"src":"7181:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:8"},"scope":1389,"src":"7107:129:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"7857:192:8","statements":[{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"store","nameLocation":"7884:5:8","nodeType":"VariableDeclaration","scope":1097,"src":"7867:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1081,"nodeType":"ArrayTypeName","src":"7867:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1087,"initialValue":{"arguments":[{"expression":{"id":1084,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"7900:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":980,"src":"7900:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1083,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"7892:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:8"},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"result","nameLocation":"7938:6:8","nodeType":"VariableDeclaration","scope":1097,"src":"7921:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1091,"nodeType":"ArrayTypeName","src":"7921:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1093,"nodeType":"VariableDeclarationStatement","src":"7921:23:8"},{"AST":{"nodeType":"YulBlock","src":"7980:39:8","statements":[{"nodeType":"YulAssignment","src":"7994:15:8","value":{"name":"store","nodeType":"YulIdentifier","src":"8004:5:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7994:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1092,"isOffset":false,"isSlot":false,"src":"7994:6:8","valueSize":1},{"declaration":1082,"isOffset":false,"isSlot":false,"src":"8004:5:8","valueSize":1}],"flags":["memory-safe"],"id":1094,"nodeType":"InlineAssembly","src":"7955:64:8"},{"expression":{"id":1095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"8036:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1077,"id":1096,"nodeType":"Return","src":"8029:13:8"}]},"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"7242:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:8","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"set","nameLocation":"7811:3:8","nodeType":"VariableDeclaration","scope":1098,"src":"7792:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1071,"nodeType":"UserDefinedTypeName","pathNode":{"id":1070,"name":"Bytes32Set","nameLocations":["7792:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"7792:10:8"},"referencedDeclaration":981,"src":"7792:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$981_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"7839:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1075,"nodeType":"ArrayTypeName","src":"7839:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:8"},"scope":1389,"src":"7776:273:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1102,"members":[{"constant":false,"id":1101,"mutability":"mutable","name":"_inner","nameLocation":"8106:6:8","nodeType":"VariableDeclaration","scope":1102,"src":"8102:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1100,"nodeType":"UserDefinedTypeName","pathNode":{"id":1099,"name":"Set","nameLocations":["8102:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"8102:3:8"},"referencedDeclaration":787,"src":"8102:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8081:10:8","nodeType":"StructDefinition","scope":1389,"src":"8074:45:8","visibility":"public"},{"body":{"id":1128,"nodeType":"Block","src":"8365:74:8","statements":[{"expression":{"arguments":[{"expression":{"id":1114,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8387:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8391:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"8387:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"8423:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1120,"name":"uint160","nodeType":"ElementaryTypeName","src":"8415:7:8","typeDescriptions":{}}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"8407:7:8","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8407:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8399:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8399:7:8","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1113,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8382:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8382:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1112,"id":1127,"nodeType":"Return","src":"8375:57:8"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"8125:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8298:3:8","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"set","nameLocation":"8321:3:8","nodeType":"VariableDeclaration","scope":1129,"src":"8302:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1105,"nodeType":"UserDefinedTypeName","pathNode":{"id":1104,"name":"AddressSet","nameLocations":["8302:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"8302:10:8"},"referencedDeclaration":1102,"src":"8302:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"value","nameLocation":"8334:5:8","nodeType":"VariableDeclaration","scope":1129,"src":"8326:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8301:39:8"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"8359:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"8359:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8358:6:8"},"scope":1389,"src":"8289:150:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"8686:77:8","statements":[{"expression":{"arguments":[{"expression":{"id":1141,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"8711:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8715:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"8711:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8747:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1147,"name":"uint160","nodeType":"ElementaryTypeName","src":"8739:7:8","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"8731:7:8","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8723:7:8","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1140,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"8703:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8703:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1139,"id":1154,"nodeType":"Return","src":"8696:60:8"}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"8445:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8616:6:8","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"set","nameLocation":"8642:3:8","nodeType":"VariableDeclaration","scope":1156,"src":"8623:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1132,"nodeType":"UserDefinedTypeName","pathNode":{"id":1131,"name":"AddressSet","nameLocations":["8623:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"8623:10:8"},"referencedDeclaration":1102,"src":"8623:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"value","nameLocation":"8655:5:8","nodeType":"VariableDeclaration","scope":1156,"src":"8647:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"8647:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8622:39:8"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"8680:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1137,"name":"bool","nodeType":"ElementaryTypeName","src":"8680:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8679:6:8"},"scope":1389,"src":"8607:156:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"8930:79:8","statements":[{"expression":{"arguments":[{"expression":{"id":1168,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8957:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8961:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"8957:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"8993:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1174,"name":"uint160","nodeType":"ElementaryTypeName","src":"8985:7:8","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"8977:7:8","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8977:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8969:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8969:7:8","typeDescriptions":{}}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8969:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1167,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8947:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1166,"id":1181,"nodeType":"Return","src":"8940:62:8"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"8769:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8853:8:8","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"set","nameLocation":"8881:3:8","nodeType":"VariableDeclaration","scope":1183,"src":"8862:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1159,"nodeType":"UserDefinedTypeName","pathNode":{"id":1158,"name":"AddressSet","nameLocations":["8862:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"8862:10:8"},"referencedDeclaration":1102,"src":"8862:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"value","nameLocation":"8894:5:8","nodeType":"VariableDeclaration","scope":1183,"src":"8886:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"8886:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8861:39:8"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"8924:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1164,"name":"bool","nodeType":"ElementaryTypeName","src":"8924:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8923:6:8"},"scope":1389,"src":"8844:165:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"9162:43:8","statements":[{"expression":{"arguments":[{"expression":{"id":1193,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"9187:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9191:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"9187:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1192,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9179:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9179:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1191,"id":1196,"nodeType":"Return","src":"9172:26:8"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"9015:70:8","text":" @dev Returns the number of values in the set. O(1)."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9099:6:8","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"set","nameLocation":"9125:3:8","nodeType":"VariableDeclaration","scope":1198,"src":"9106:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1186,"nodeType":"UserDefinedTypeName","pathNode":{"id":1185,"name":"AddressSet","nameLocations":["9106:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"9106:10:8"},"referencedDeclaration":1102,"src":"9106:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9105:24:8"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"9153:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"9153:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9152:9:8"},"scope":1389,"src":"9090:115:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1224,"nodeType":"Block","src":"9630:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1216,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"9675:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9679:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"9675:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1218,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"9687:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1215,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"9671:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"9663:7:8","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1211,"name":"uint160","nodeType":"ElementaryTypeName","src":"9655:7:8","typeDescriptions":{}}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9647:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"9647:7:8","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9647:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1208,"id":1223,"nodeType":"Return","src":"9640:56:8"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"9211:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9556:2:8","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"set","nameLocation":"9578:3:8","nodeType":"VariableDeclaration","scope":1225,"src":"9559:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1201,"nodeType":"UserDefinedTypeName","pathNode":{"id":1200,"name":"AddressSet","nameLocations":["9559:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"9559:10:8"},"referencedDeclaration":1102,"src":"9559:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"index","nameLocation":"9591:5:8","nodeType":"VariableDeclaration","scope":1225,"src":"9583:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"9583:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9558:39:8"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"9621:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"9621:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9620:9:8"},"scope":1389,"src":"9547:156:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1254,"nodeType":"Block","src":"10324:192:8","statements":[{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"store","nameLocation":"10351:5:8","nodeType":"VariableDeclaration","scope":1254,"src":"10334:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10334:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1238,"nodeType":"ArrayTypeName","src":"10334:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1244,"initialValue":{"arguments":[{"expression":{"id":1241,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"10367:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10371:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"10367:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1240,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"10359:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10359:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10334:44:8"},{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"result","nameLocation":"10405:6:8","nodeType":"VariableDeclaration","scope":1254,"src":"10388:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"10388:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1248,"nodeType":"ArrayTypeName","src":"10388:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1250,"nodeType":"VariableDeclarationStatement","src":"10388:23:8"},{"AST":{"nodeType":"YulBlock","src":"10447:39:8","statements":[{"nodeType":"YulAssignment","src":"10461:15:8","value":{"name":"store","nodeType":"YulIdentifier","src":"10471:5:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10461:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1249,"isOffset":false,"isSlot":false,"src":"10461:6:8","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"10471:5:8","valueSize":1}],"flags":["memory-safe"],"id":1251,"nodeType":"InlineAssembly","src":"10422:64:8"},{"expression":{"id":1252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"10503:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1234,"id":1253,"nodeType":"Return","src":"10496:13:8"}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"9709:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10252:6:8","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"set","nameLocation":"10278:3:8","nodeType":"VariableDeclaration","scope":1255,"src":"10259:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1228,"nodeType":"UserDefinedTypeName","pathNode":{"id":1227,"name":"AddressSet","nameLocations":["10259:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"10259:10:8"},"referencedDeclaration":1102,"src":"10259:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1102_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10258:24:8"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"10306:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"10306:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1232,"nodeType":"ArrayTypeName","src":"10306:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10305:18:8"},"scope":1389,"src":"10243:273:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":1259,"members":[{"constant":false,"id":1258,"mutability":"mutable","name":"_inner","nameLocation":"10567:6:8","nodeType":"VariableDeclaration","scope":1259,"src":"10563:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1257,"nodeType":"UserDefinedTypeName","pathNode":{"id":1256,"name":"Set","nameLocations":["10563:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":787,"src":"10563:3:8"},"referencedDeclaration":787,"src":"10563:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10545:7:8","nodeType":"StructDefinition","scope":1389,"src":"10538:42:8","visibility":"public"},{"body":{"id":1279,"nodeType":"Block","src":"10823:56:8","statements":[{"expression":{"arguments":[{"expression":{"id":1271,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"10845:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10849:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1258,"src":"10845:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"10865:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10857:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10857:7:8","typeDescriptions":{}}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10857:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1270,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"10840:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1269,"id":1278,"nodeType":"Return","src":"10833:39:8"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"10586:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1280,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10759:3:8","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"set","nameLocation":"10779:3:8","nodeType":"VariableDeclaration","scope":1280,"src":"10763:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1262,"nodeType":"UserDefinedTypeName","pathNode":{"id":1261,"name":"UintSet","nameLocations":["10763:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"10763:7:8"},"referencedDeclaration":1259,"src":"10763:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"value","nameLocation":"10792:5:8","nodeType":"VariableDeclaration","scope":1280,"src":"10784:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"10784:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10762:36:8"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1280,"src":"10817:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1267,"name":"bool","nodeType":"ElementaryTypeName","src":"10817:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10816:6:8"},"scope":1389,"src":"10750:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1300,"nodeType":"Block","src":"11123:59:8","statements":[{"expression":{"arguments":[{"expression":{"id":1292,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"11148:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11152:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1258,"src":"11148:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"11168:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11160:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11160:7:8","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11160:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1291,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"11140:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1290,"id":1299,"nodeType":"Return","src":"11133:42:8"}]},"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"10885:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11056:6:8","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"set","nameLocation":"11079:3:8","nodeType":"VariableDeclaration","scope":1301,"src":"11063:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1283,"nodeType":"UserDefinedTypeName","pathNode":{"id":1282,"name":"UintSet","nameLocations":["11063:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"11063:7:8"},"referencedDeclaration":1259,"src":"11063:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"value","nameLocation":"11092:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"11084:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"11084:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11062:36:8"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"11117:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1288,"name":"bool","nodeType":"ElementaryTypeName","src":"11117:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11116:6:8"},"scope":1389,"src":"11047:135:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"11346:61:8","statements":[{"expression":{"arguments":[{"expression":{"id":1313,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"11373:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11377:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1258,"src":"11373:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"11393:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11385:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11385:7:8","typeDescriptions":{}}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11385:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1312,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"11363:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11363:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1311,"id":1320,"nodeType":"Return","src":"11356:44:8"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"11188:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11272:8:8","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"set","nameLocation":"11297:3:8","nodeType":"VariableDeclaration","scope":1322,"src":"11281:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1304,"nodeType":"UserDefinedTypeName","pathNode":{"id":1303,"name":"UintSet","nameLocations":["11281:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"11281:7:8"},"referencedDeclaration":1259,"src":"11281:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"value","nameLocation":"11310:5:8","nodeType":"VariableDeclaration","scope":1322,"src":"11302:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:36:8"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"11340:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1309,"name":"bool","nodeType":"ElementaryTypeName","src":"11340:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11339:6:8"},"scope":1389,"src":"11263:144:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"11557:43:8","statements":[{"expression":{"arguments":[{"expression":{"id":1332,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"11582:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11586:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1258,"src":"11582:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1331,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"11574:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11574:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1330,"id":1335,"nodeType":"Return","src":"11567:26:8"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"11413:70:8","text":" @dev Returns the number of values in the set. O(1)."},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11497:6:8","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"set","nameLocation":"11520:3:8","nodeType":"VariableDeclaration","scope":1337,"src":"11504:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1325,"nodeType":"UserDefinedTypeName","pathNode":{"id":1324,"name":"UintSet","nameLocations":["11504:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"11504:7:8"},"referencedDeclaration":1259,"src":"11504:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11503:21:8"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1337,"src":"11548:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"11548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11547:9:8"},"scope":1389,"src":"11488:112:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1357,"nodeType":"Block","src":"12022:55:8","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1351,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"12051:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12055:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1258,"src":"12051:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1353,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"12063:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"12047:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12047:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12039:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"12039:7:8","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12039:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1347,"id":1356,"nodeType":"Return","src":"12032:38:8"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"11606:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11951:2:8","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"set","nameLocation":"11970:3:8","nodeType":"VariableDeclaration","scope":1358,"src":"11954:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1340,"nodeType":"UserDefinedTypeName","pathNode":{"id":1339,"name":"UintSet","nameLocations":["11954:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"11954:7:8"},"referencedDeclaration":1259,"src":"11954:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"index","nameLocation":"11983:5:8","nodeType":"VariableDeclaration","scope":1358,"src":"11975:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"11975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:36:8"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1358,"src":"12013:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:9:8"},"scope":1389,"src":"11942:135:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1387,"nodeType":"Block","src":"12695:192:8","statements":[{"assignments":[1372],"declarations":[{"constant":false,"id":1372,"mutability":"mutable","name":"store","nameLocation":"12722:5:8","nodeType":"VariableDeclaration","scope":1387,"src":"12705:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12705:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1371,"nodeType":"ArrayTypeName","src":"12705:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[{"expression":{"id":1374,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"12738:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12742:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1258,"src":"12738:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$787_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1373,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12730:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$787_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12730:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12705:44:8"},{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"result","nameLocation":"12776:6:8","nodeType":"VariableDeclaration","scope":1387,"src":"12759:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1381,"nodeType":"ArrayTypeName","src":"12759:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1383,"nodeType":"VariableDeclarationStatement","src":"12759:23:8"},{"AST":{"nodeType":"YulBlock","src":"12818:39:8","statements":[{"nodeType":"YulAssignment","src":"12832:15:8","value":{"name":"store","nodeType":"YulIdentifier","src":"12842:5:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12832:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1382,"isOffset":false,"isSlot":false,"src":"12832:6:8","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"12842:5:8","valueSize":1}],"flags":["memory-safe"],"id":1384,"nodeType":"InlineAssembly","src":"12793:64:8"},{"expression":{"id":1385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"12874:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1367,"id":1386,"nodeType":"Return","src":"12867:13:8"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"12083:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1388,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12626:6:8","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"set","nameLocation":"12649:3:8","nodeType":"VariableDeclaration","scope":1388,"src":"12633:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"UintSet","nameLocations":["12633:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"12633:7:8"},"referencedDeclaration":1259,"src":"12633:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1259_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12632:21:8"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"12677:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"12677:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ArrayTypeName","src":"12677:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12676:18:8"},"scope":1389,"src":"12617:270:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1390,"src":"1330:11559:8","usedErrors":[],"usedEvents":[]}],"src":"205:12685:8"},"id":8},"contracts/Bank.sol":{"ast":{"absolutePath":"contracts/Bank.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"Bank":[1628],"Context":[740],"EnumerableSet":[1389],"IAccessControlEnumerable":[710],"IBank":[1423],"Ownable":[526]},"id":1629,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1391,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":1392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1629,"sourceUnit":685,"src":"58:79:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1629,"sourceUnit":527,"src":"138:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBank","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1423,"linearizedBaseContracts":[1423],"name":"IBank","nameLocation":"202:5:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"bc4b3365","id":1400,"implemented":false,"kind":"function","modifiers":[],"name":"addFunds","nameLocation":"223:8:9","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"_addr","nameLocation":"240:5:9","nodeType":"VariableDeclaration","scope":1400,"src":"232:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"_amount","nameLocation":"255:7:9","nodeType":"VariableDeclaration","scope":1400,"src":"247:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"231:32:9"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"273:0:9"},"scope":1423,"src":"214:60:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f968954e","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"subFunds","nameLocation":"288:8:9","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"_addr","nameLocation":"305:5:9","nodeType":"VariableDeclaration","scope":1407,"src":"297:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"297:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"_amount","nameLocation":"320:7:9","nodeType":"VariableDeclaration","scope":1407,"src":"312:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"296:32:9"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"338:0:9"},"scope":1423,"src":"279:60:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d0e30db0","id":1410,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"353:7:9","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"360:2:9"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"380:0:9"},"scope":1423,"src":"344:37:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"14174f33","id":1415,"implemented":false,"kind":"function","modifiers":[],"name":"withDraw","nameLocation":"395:8:9","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"_amount","nameLocation":"412:7:9","nodeType":"VariableDeclaration","scope":1415,"src":"404:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:17:9"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[],"src":"430:0:9"},"scope":1423,"src":"386:45:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1422,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"445:9:9","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"_addr","nameLocation":"463:5:9","nodeType":"VariableDeclaration","scope":1422,"src":"455:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"454:15:9"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1422,"src":"487:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"486:9:9"},"scope":1423,"src":"436:60:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1629,"src":"192:306:9","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1424,"name":"Ownable","nameLocations":["516:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"516:7:9"},"id":1425,"nodeType":"InheritanceSpecifier","src":"516:7:9"}],"canonicalName":"Bank","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1628,"linearizedBaseContracts":[1628,526,740],"name":"Bank","nameLocation":"508:4:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1429,"mutability":"mutable","name":"funds","nameLocation":"690:5:9","nodeType":"VariableDeclaration","scope":1628,"src":"654:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1428,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"654:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"bf326191","id":1432,"mutability":"mutable","name":"allowedCallers","nameLocation":"718:14:9","nodeType":"VariableDeclaration","scope":1628,"src":"701:31:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1431,"nodeType":"ArrayTypeName","src":"701:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"14b43ca4c63c5423006ad978eab8a14386476b52f1d4728070ea20a36f13e83b","id":1438,"name":"WithDraw","nameLocation":"745:8:9","nodeType":"EventDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"indexed":false,"mutability":"mutable","name":"_addr","nameLocation":"762:5:9","nodeType":"VariableDeclaration","scope":1438,"src":"754:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1436,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"777:7:9","nodeType":"VariableDeclaration","scope":1438,"src":"769:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"753:32:9"},"src":"739:47:9"},{"anonymous":false,"eventSelector":"e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c","id":1444,"name":"Deposit","nameLocation":"797:7:9","nodeType":"EventDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"indexed":false,"mutability":"mutable","name":"_addr","nameLocation":"813:5:9","nodeType":"VariableDeclaration","scope":1444,"src":"805:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"828:7:9","nodeType":"VariableDeclaration","scope":1444,"src":"820:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"804:32:9"},"src":"791:46:9"},{"body":{"id":1451,"nodeType":"Block","src":"876:208:9","statements":[]},"id":1452,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"865:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"869:6:9","memberName":"sender","nodeType":"MemberAccess","src":"865:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1449,"kind":"baseConstructorSpecifier","modifierName":{"id":1446,"name":"Ownable","nameLocations":["857:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"857:7:9"},"nodeType":"ModifierInvocation","src":"857:19:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"854:2:9"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"876:0:9"},"scope":1628,"src":"843:241:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1465,"nodeType":"Block","src":"1158:52:9","statements":[{"expression":{"arguments":[{"id":1462,"name":"_allowedCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1188:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1459,"name":"allowedCallers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1168:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1183:4:9","memberName":"push","nodeType":"MemberAccess","src":"1168:19:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1168:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"1168:35:9"}]},"functionSelector":"bd53915a","id":1466,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":1457,"kind":"modifierInvocation","modifierName":{"id":1456,"name":"onlyOwner","nameLocations":["1146:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1146:9:9"},"nodeType":"ModifierInvocation","src":"1146:11:9"}],"name":"setAllowCaller","nameLocation":"1099:14:9","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"_allowedCaller","nameLocation":"1123:14:9","nodeType":"VariableDeclaration","scope":1466,"src":"1115:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1114:24:9"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"1158:0:9"},"scope":1628,"src":"1090:120:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1502,"nodeType":"Block","src":"1245:346:9","statements":[{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"allow","nameLocation":"1361:5:9","nodeType":"VariableDeclaration","scope":1502,"src":"1356:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1468,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1471,"initialValue":{"hexValue":"66616c7365","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1369:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"1356:18:9"},{"body":{"id":1494,"nodeType":"Block","src":"1427:70:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1444:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1448:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1444:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":1485,"name":"allowedCallers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1458:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1487,"indexExpression":{"id":1486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1473:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1458:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1444:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1493,"nodeType":"IfStatement","src":"1441:45:9","trueBody":{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1489,"name":"allow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1476:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1482:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1476:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1492,"nodeType":"ExpressionStatement","src":"1476:10:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1399:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1477,"name":"allowedCallers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1401:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1416:6:9","memberName":"length","nodeType":"MemberAccess","src":"1401:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1399:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"initializationExpression":{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"i","nameLocation":"1394:1:9","nodeType":"VariableDeclaration","scope":1495,"src":"1388:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1472,"name":"uint8","nodeType":"ElementaryTypeName","src":"1388:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1475,"initialValue":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1388:9:9"},"loopExpression":{"expression":{"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1423:3:9","subExpression":{"id":1480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1423:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1482,"nodeType":"ExpressionStatement","src":"1423:3:9"},"nodeType":"ForStatement","src":"1384:113:9"},{"expression":{"arguments":[{"id":1497,"name":"allow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1514:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4163636573732064656e6965643a2043616c6c6572206973206e6f742074686520616c6c6f77656420636f6e7472616374","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1521:51:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee","typeString":"literal_string \"Access denied: Caller is not the allowed contract\""},"value":"Access denied: Caller is not the allowed contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee","typeString":"literal_string \"Access denied: Caller is not the allowed contract\""}],"id":1496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1506:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1506:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1500,"nodeType":"ExpressionStatement","src":"1506:67:9"},{"id":1501,"nodeType":"PlaceholderStatement","src":"1583:1:9"}]},"id":1503,"name":"onlyAllowedCaller","nameLocation":"1225:17:9","nodeType":"ModifierDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"1242:2:9"},"src":"1216:375:9","virtual":false,"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"1672:75:9","statements":[{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1512,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1703:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1514,"indexExpression":{"id":1513,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1709:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1703:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1515,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1718:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1517,"indexExpression":{"id":1516,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1724:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1718:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1518,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"1733:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1718:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1703:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1521,"nodeType":"ExpressionStatement","src":"1703:37:9"}]},"functionSelector":"bc4b3365","id":1523,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":1510,"kind":"modifierInvocation","modifierName":{"id":1509,"name":"onlyAllowedCaller","nameLocations":["1653:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"1653:17:9"},"nodeType":"ModifierInvocation","src":"1653:19:9"}],"name":"addFunds","nameLocation":"1605:8:9","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"_addr","nameLocation":"1622:5:9","nodeType":"VariableDeclaration","scope":1523,"src":"1614:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"_amount","nameLocation":"1637:7:9","nodeType":"VariableDeclaration","scope":1523,"src":"1629:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1613:32:9"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"1672:0:9"},"scope":1628,"src":"1596:151:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1542,"nodeType":"Block","src":"1829:73:9","statements":[{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1532,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1858:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1534,"indexExpression":{"id":1533,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1864:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1858:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1535,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1873:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1537,"indexExpression":{"id":1536,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1879:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1538,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"1888:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1873:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1858:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"1858:37:9"}]},"functionSelector":"f968954e","id":1543,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":1530,"kind":"modifierInvocation","modifierName":{"id":1529,"name":"onlyAllowedCaller","nameLocations":["1810:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"1810:17:9"},"nodeType":"ModifierInvocation","src":"1810:19:9"}],"name":"subFunds","nameLocation":"1761:8:9","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"_addr","nameLocation":"1778:5:9","nodeType":"VariableDeclaration","scope":1543,"src":"1770:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"1770:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"_amount","nameLocation":"1793:7:9","nodeType":"VariableDeclaration","scope":1543,"src":"1785:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1769:32:9"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"1829:0:9"},"scope":1628,"src":"1752:150:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1554,"nodeType":"Block","src":"1972:38:9","statements":[{"expression":{"baseExpression":{"id":1550,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1989:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1552,"indexExpression":{"id":1551,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1995:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1989:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1549,"id":1553,"nodeType":"Return","src":"1982:19:9"}]},"functionSelector":"70a08231","id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1916:9:9","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"_addr","nameLocation":"1934:5:9","nodeType":"VariableDeclaration","scope":1555,"src":"1926:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1925:15:9"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"1963:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1963:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1962:9:9"},"scope":1628,"src":"1907:103:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1599,"nodeType":"Block","src":"2059:247:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2077:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2085:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2077:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e7420746f20736d616c6c","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2088:17:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656","typeString":"literal_string \"amount to small\""},"value":"amount to small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656","typeString":"literal_string \"amount to small\""}],"id":1560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2069:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2069:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"ExpressionStatement","src":"2069:37:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1568,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2124:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1571,"indexExpression":{"expression":{"id":1569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2130:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2134:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2130:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2124:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1572,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2142:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2124:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f20656e6f7567746820616d6f756e74","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2150:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e","typeString":"literal_string \"no enougth amount\""},"value":"no enougth amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e","typeString":"literal_string \"no enougth amount\""}],"id":1567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2116:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2116:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"2116:54:9"},{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1577,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2180:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1580,"indexExpression":{"expression":{"id":1578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2186:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2190:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2186:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2180:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1581,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2180:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"2180:28:9"},{"expression":{"arguments":[{"id":1590,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2226:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2230:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2226:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2218:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"2218:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2218:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2238:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"2218:28:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2218:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"2218:37:9"},{"eventCall":{"arguments":[{"expression":{"id":1594,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2279:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2283:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2279:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2291:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"WithDraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2270:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"2265:34:9"}]},"functionSelector":"14174f33","id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"withDraw","nameLocation":"2024:8:9","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"_amount","nameLocation":"2041:7:9","nodeType":"VariableDeclaration","scope":1600,"src":"2033:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2032:17:9"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"2059:0:9"},"scope":1628,"src":"2015:291:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1626,"nodeType":"Block","src":"2346:141:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2364:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2368:5:9","memberName":"value","nodeType":"MemberAccess","src":"2364:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2374:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e7420746f20736d616c6c","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2377:17:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656","typeString":"literal_string \"amount to small\""},"value":"amount to small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656","typeString":"literal_string \"amount to small\""}],"id":1603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2356:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"ExpressionStatement","src":"2356:39:9"},{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1611,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2405:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1614,"indexExpression":{"expression":{"id":1612,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2411:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2415:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2411:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2405:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1615,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2426:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2430:5:9","memberName":"value","nodeType":"MemberAccess","src":"2426:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2405:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"2405:30:9"},{"eventCall":{"arguments":[{"expression":{"id":1620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2458:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2462:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2458:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2470:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2474:5:9","memberName":"value","nodeType":"MemberAccess","src":"2470:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1619,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"2450:7:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"EmitStatement","src":"2445:35:9"}]},"functionSelector":"d0e30db0","id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"2320:7:9","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"2327:2:9"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"2346:0:9"},"scope":1628,"src":"2311:176:9","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1629,"src":"499:1990:9","usedErrors":[392,397],"usedEvents":[403,1438,1444]}],"src":"32:2457:9"},"id":9},"contracts/Roulette.sol":{"ast":{"absolutePath":"contracts/Roulette.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"Bank":[1628],"Context":[740],"EnumerableSet":[1389],"IAccessControlEnumerable":[710],"IBank":[1423],"Ownable":[526],"Roulette":[1923]},"id":1924,"nodeType":"SourceUnit","nodes":[{"id":1630,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"0:24:10"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1631,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1924,"sourceUnit":527,"src":"26:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Bank.sol","file":"./Bank.sol","id":1632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1924,"sourceUnit":1629,"src":"79:20:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1633,"name":"Ownable","nameLocations":["121:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"121:7:10"},"id":1634,"nodeType":"InheritanceSpecifier","src":"121:7:10"}],"canonicalName":"Roulette","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1923,"linearizedBaseContracts":[1923,526,740],"name":"Roulette","nameLocation":"109:8:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"76cdb03b","id":1637,"mutability":"mutable","name":"bank","nameLocation":"203:4:10","nodeType":"VariableDeclaration","scope":1923,"src":"191:16:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"},"typeName":{"id":1636,"nodeType":"UserDefinedTypeName","pathNode":{"id":1635,"name":"Bank","nameLocations":["191:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"191:4:10"},"referencedDeclaration":1628,"src":"191:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"}},"visibility":"public"},{"canonicalName":"Roulette.Bet","id":1648,"members":[{"constant":false,"id":1639,"mutability":"mutable","name":"beter","nameLocation":"242:5:10","nodeType":"VariableDeclaration","scope":1648,"src":"234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"234:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"bet_type","nameLocation":"265:8:10","nodeType":"VariableDeclaration","scope":1648,"src":"257:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"bet_time","nameLocation":"291:8:10","nodeType":"VariableDeclaration","scope":1648,"src":"283:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"283:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"bet_num","nameLocation":"317:7:10","nodeType":"VariableDeclaration","scope":1648,"src":"309:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"bet_amounts","nameLocation":"342:11:10","nodeType":"VariableDeclaration","scope":1648,"src":"334:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Bet","nameLocation":"220:3:10","nodeType":"StructDefinition","scope":1923,"src":"213:147:10","visibility":"public"},{"constant":false,"functionSelector":"22af00fa","id":1652,"mutability":"mutable","name":"bets","nameLocation":"378:4:10","nodeType":"VariableDeclaration","scope":1923,"src":"365:17:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet[]"},"typeName":{"baseType":{"id":1650,"nodeType":"UserDefinedTypeName","pathNode":{"id":1649,"name":"Bet","nameLocations":["365:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"365:3:10"},"referencedDeclaration":1648,"src":"365:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage_ptr","typeString":"struct Roulette.Bet"}},"id":1651,"nodeType":"ArrayTypeName","src":"365:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage_ptr","typeString":"struct Roulette.Bet[]"}},"visibility":"public"},{"constant":false,"functionSelector":"27a4fdb8","id":1655,"mutability":"mutable","name":"rolleds","nameLocation":"405:7:10","nodeType":"VariableDeclaration","scope":1923,"src":"388:24:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1654,"nodeType":"ArrayTypeName","src":"388:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"3e9db003453ae07fd7ab02f4e21dab9fc7545ec5476b9823d2b4c3baf223323f","id":1660,"name":"PlaceBet","nameLocation":"425:8:10","nodeType":"EventDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"indexed":false,"mutability":"mutable","name":"bet","nameLocation":"448:3:10","nodeType":"VariableDeclaration","scope":1660,"src":"444:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet"},"typeName":{"id":1657,"nodeType":"UserDefinedTypeName","pathNode":{"id":1656,"name":"Bet","nameLocations":["444:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"444:3:10"},"referencedDeclaration":1648,"src":"444:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage_ptr","typeString":"struct Roulette.Bet"}},"visibility":"internal"}],"src":"434:23:10"},"src":"419:39:10"},{"anonymous":false,"eventSelector":"79166ed647ea7e9efa3de349320bb43e28d04637a86429193d882d8f0e01fb43","id":1666,"name":"WinFund","nameLocation":"469:7:10","nodeType":"EventDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"indexed":false,"mutability":"mutable","name":"addr","nameLocation":"485:4:10","nodeType":"VariableDeclaration","scope":1666,"src":"477:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1664,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"498:7:10","nodeType":"VariableDeclaration","scope":1666,"src":"490:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"476:30:10"},"src":"463:44:10"},{"body":{"id":1681,"nodeType":"Block","src":"560:35:10","statements":[{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1675,"name":"bank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"570:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1677,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"582:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1676,"name":"Bank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"577:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Bank_$1628_$","typeString":"type(contract Bank)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"577:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"}},"src":"570:18:10","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"}},"id":1680,"nodeType":"ExpressionStatement","src":"570:18:10"}]},"id":1682,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"549:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"553:6:10","memberName":"sender","nodeType":"MemberAccess","src":"549:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1673,"kind":"baseConstructorSpecifier","modifierName":{"id":1670,"name":"Ownable","nameLocations":["541:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"541:7:10"},"nodeType":"ModifierInvocation","src":"541:19:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"_addr","nameLocation":"533:5:10","nodeType":"VariableDeclaration","scope":1682,"src":"525:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:15:10"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"560:0:10"},"scope":1923,"src":"513:82:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1722,"nodeType":"Block","src":"690:264:10","statements":[{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"bet","nameLocation":"711:3:10","nodeType":"VariableDeclaration","scope":1722,"src":"700:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet"},"typeName":{"id":1692,"nodeType":"UserDefinedTypeName","pathNode":{"id":1691,"name":"Bet","nameLocations":["700:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"700:3:10"},"referencedDeclaration":1648,"src":"700:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage_ptr","typeString":"struct Roulette.Bet"}},"visibility":"internal"}],"id":1703,"initialValue":{"arguments":[{"expression":{"id":1695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:10","memberName":"sender","nodeType":"MemberAccess","src":"734:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1697,"name":"_bet_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"758:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1698,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"781:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"787:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"781:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1700,"name":"_bet_num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"810:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1701,"name":"_bet_amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"832:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1694,"name":"Bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"717:3:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Bet_$1648_storage_ptr_$","typeString":"type(struct Roulette.Bet storage pointer)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"717:128:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"nodeType":"VariableDeclarationStatement","src":"700:145:10"},{"expression":{"arguments":[{"id":1707,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"866:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}],"expression":{"id":1704,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"856:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"861:4:10","memberName":"push","nodeType":"MemberAccess","src":"856:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Bet_$1648_storage_$dyn_storage_ptr_$_t_struct$_Bet_$1648_storage_$returns$__$attached_to$_t_array$_t_struct$_Bet_$1648_storage_$dyn_storage_ptr_$","typeString":"function (struct Roulette.Bet storage ref[] storage pointer,struct Roulette.Bet storage ref)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"856:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"856:14:10"},{"expression":{"arguments":[{"expression":{"id":1713,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"894:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"898:6:10","memberName":"sender","nodeType":"MemberAccess","src":"894:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1715,"name":"_bet_amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"906:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1710,"name":"bank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"880:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"885:8:10","memberName":"subFunds","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"880:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"880:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"ExpressionStatement","src":"880:39:10"},{"eventCall":{"arguments":[{"id":1719,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"943:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}],"id":1718,"name":"PlaceBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"934:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Bet_$1648_memory_ptr_$returns$__$","typeString":"function (struct Roulette.Bet memory)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1721,"nodeType":"EmitStatement","src":"929:18:10"}]},"functionSelector":"7c68f2b9","id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"place_bet","nameLocation":"614:9:10","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"_bet_type","nameLocation":"632:9:10","nodeType":"VariableDeclaration","scope":1723,"src":"624:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"_bet_num","nameLocation":"651:8:10","nodeType":"VariableDeclaration","scope":1723,"src":"643:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"_bet_amounts","nameLocation":"669:12:10","nodeType":"VariableDeclaration","scope":1723,"src":"661:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:59:10"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"690:0:10"},"scope":1923,"src":"605:349:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1731,"nodeType":"Block","src":"1012:35:10","statements":[{"expression":{"expression":{"id":1728,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"1029:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1034:6:10","memberName":"length","nodeType":"MemberAccess","src":"1029:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1727,"id":1730,"nodeType":"Return","src":"1022:18:10"}]},"functionSelector":"bbd2e01e","id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"betsLength","nameLocation":"969:10:10","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"979:2:10"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"1004:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:9:10"},"scope":1923,"src":"960:87:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1740,"nodeType":"Block","src":"1107:38:10","statements":[{"expression":{"expression":{"id":1737,"name":"rolleds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1124:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1132:6:10","memberName":"length","nodeType":"MemberAccess","src":"1124:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1739,"nodeType":"Return","src":"1117:21:10"}]},"functionSelector":"3eb380a0","id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"getRollLength","nameLocation":"1061:13:10","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[],"src":"1074:2:10"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"1099:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1098:9:10"},"scope":1923,"src":"1052:93:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1763,"nodeType":"Block","src":"1236:98:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1753,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1285:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1291:10:10","memberName":"difficulty","nodeType":"MemberAccess","src":"1285:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1755,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1303:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1309:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"1303:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1751,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1268:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1272:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"1268:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1268:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1750,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1258:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1258:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1253:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1748,"name":"uint","nodeType":"ElementaryTypeName","src":"1253:4:10","typeDescriptions":{}}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1253:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1760,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"1324:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1253:74:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1747,"id":1762,"nodeType":"Return","src":"1246:81:10"}]},"id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"_random","nameLocation":"1189:7:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"mod","nameLocation":"1202:3:10","nodeType":"VariableDeclaration","scope":1764,"src":"1197:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1196:10:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"1230:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint","nodeType":"ElementaryTypeName","src":"1230:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:6:10"},"scope":1923,"src":"1180:154:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"1397:186:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1411:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3131","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1418:2:10","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"1411:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1425:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3138","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1432:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1425:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1438:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3239","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1445:2:10","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"src":"1438:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1425:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1424:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1411:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1796,"nodeType":"Block","src":"1532:45:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1553:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1560:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1553:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1553:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1770,"id":1795,"nodeType":"Return","src":"1546:20:10"}]},"id":1797,"nodeType":"IfStatement","src":"1407:170:10","trueBody":{"id":1789,"nodeType":"Block","src":"1450:76:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1783,"name":"roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1502:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1509:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1502:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1502:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1770,"id":1788,"nodeType":"Return","src":"1495:20:10"}]}}]},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"_is_red","nameLocation":"1349:7:10","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"roll","nameLocation":"1362:4:10","nodeType":"VariableDeclaration","scope":1799,"src":"1357:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint","nodeType":"ElementaryTypeName","src":"1357:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1356:11:10"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"1391:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1768,"name":"bool","nodeType":"ElementaryTypeName","src":"1391:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1390:6:10"},"scope":1923,"src":"1340:243:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"1666:394:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1809,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1679:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"id":1810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1683:8:10","memberName":"bet_type","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"1679:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1695:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1679:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1831,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1869:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"id":1832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1873:8:10","memberName":"bet_type","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"1869:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1885:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1869:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1850,"nodeType":"IfStatement","src":"1865:171:10","trueBody":{"id":1849,"nodeType":"Block","src":"1888:148:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1835,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1939:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"id":1836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1943:7:10","memberName":"bet_num","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"1939:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"_roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1955:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1955:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1954:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1939:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"1935:91:10","trueBody":{"id":1847,"nodeType":"Block","src":"1967:59:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1842,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1992:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"id":1843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1996:11:10","memberName":"bet_amounts","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"1992:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2010:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1992:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1808,"id":1846,"nodeType":"Return","src":"1985:26:10"}]}}]}},"id":1851,"nodeType":"IfStatement","src":"1676:360:10","trueBody":{"id":1830,"nodeType":"Block","src":"1698:162:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1813,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1750:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"id":1814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1754:7:10","memberName":"bet_num","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"1750:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"condition":{"arguments":[{"id":1816,"name":"_roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1774:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1815,"name":"_is_red","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1766:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1766:22:10","trueExpression":{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1765:24:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1750:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1829,"nodeType":"IfStatement","src":"1746:104:10","trueBody":{"id":1828,"nodeType":"Block","src":"1791:59:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1823,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1816:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet memory"}},"id":1824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1820:11:10","memberName":"bet_amounts","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"1816:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1816:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1808,"id":1827,"nodeType":"Return","src":"1809:26:10"}]}}]}},{"expression":{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2052:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1808,"id":1853,"nodeType":"Return","src":"2045:8:10"}]},"functionSelector":"4e2bb54f","id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"calcWinner","nameLocation":"1597:10:10","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"bet","nameLocation":"1619:3:10","nodeType":"VariableDeclaration","scope":1855,"src":"1608:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_memory_ptr","typeString":"struct Roulette.Bet"},"typeName":{"id":1801,"nodeType":"UserDefinedTypeName","pathNode":{"id":1800,"name":"Bet","nameLocations":["1608:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"1608:3:10"},"referencedDeclaration":1648,"src":"1608:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage_ptr","typeString":"struct Roulette.Bet"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"_roll","nameLocation":"1631:5:10","nodeType":"VariableDeclaration","scope":1855,"src":"1623:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1607:30:10"},"returnParameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"1658:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1657:9:10"},"scope":1923,"src":"1588:472:10","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1921,"nodeType":"Block","src":"2102:588:10","statements":[{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"_roll","nameLocation":"2120:5:10","nodeType":"VariableDeclaration","scope":1921,"src":"2112:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2112:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1865,"initialValue":{"arguments":[{"hexValue":"3337","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2136:2:10","typeDescriptions":{"typeIdentifier":"t_rational_37_by_1","typeString":"int_const 37"},"value":"37"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_37_by_1","typeString":"int_const 37"}],"id":1862,"name":"_random","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2128:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2112:27:10"},{"expression":{"arguments":[{"id":1869,"name":"_roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2162:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1866,"name":"rolleds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"2149:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2157:4:10","memberName":"push","nodeType":"MemberAccess","src":"2149:12:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1871,"nodeType":"ExpressionStatement","src":"2149:19:10"},{"body":{"id":1916,"nodeType":"Block","src":"2212:451:10","statements":[{"assignments":[1884],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"winMoney","nameLocation":"2234:8:10","nodeType":"VariableDeclaration","scope":1916,"src":"2226:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1891,"initialValue":{"arguments":[{"baseExpression":{"id":1886,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2256:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"id":1888,"indexExpression":{"id":1887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2261:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2256:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage","typeString":"struct Roulette.Bet storage ref"}},{"id":1889,"name":"_roll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2265:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bet_$1648_storage","typeString":"struct Roulette.Bet storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1885,"name":"calcWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"2245:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Bet_$1648_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Roulette.Bet memory,uint256) pure returns (uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2245:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2226:45:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"winMoney","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2288:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2288:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1914,"nodeType":"Block","src":"2463:190:10","statements":[]},"id":1915,"nodeType":"IfStatement","src":"2285:368:10","trueBody":{"id":1913,"nodeType":"Block","src":"2299:160:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1898,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2331:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"id":1900,"indexExpression":{"id":1899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2336:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2331:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage","typeString":"struct Roulette.Bet storage ref"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:5:10","memberName":"beter","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"2331:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1902,"name":"winMoney","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2346:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1895,"name":"bank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"2317:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$1628","typeString":"contract Bank"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2322:8:10","memberName":"addFunds","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"2317:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"ExpressionStatement","src":"2317:38:10"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1906,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2420:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"id":1908,"indexExpression":{"id":1907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2425:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2420:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bet_$1648_storage","typeString":"struct Roulette.Bet storage ref"}},"id":1909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2428:5:10","memberName":"beter","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"2420:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1910,"name":"winMoney","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2435:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1905,"name":"WinFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2412:7:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2412:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1912,"nodeType":"EmitStatement","src":"2407:37:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2192:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1877,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2194:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:6:10","memberName":"length","nodeType":"MemberAccess","src":"2194:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2192:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"initializationExpression":{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"i","nameLocation":"2187:1:10","nodeType":"VariableDeclaration","scope":1917,"src":"2182:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint","nodeType":"ElementaryTypeName","src":"2182:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1875,"initialValue":{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2182:8:10"},"loopExpression":{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2207:3:10","subExpression":{"id":1880,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2207:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"nodeType":"ExpressionStatement","src":"2207:3:10"},"nodeType":"ForStatement","src":"2178:485:10"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2672:11:10","subExpression":{"id":1918,"name":"bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2679:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bet_$1648_storage_$dyn_storage","typeString":"struct Roulette.Bet storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"ExpressionStatement","src":"2672:11:10"}]},"functionSelector":"93e84cd9","id":1922,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":1858,"kind":"modifierInvocation","modifierName":{"id":1857,"name":"onlyOwner","nameLocations":["2090:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2090:9:10"},"nodeType":"ModifierInvocation","src":"2090:11:10"}],"name":"play","nameLocation":"2075:4:10","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"2079:2:10"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"2102:0:10"},"scope":1923,"src":"2066:624:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1924,"src":"100:2592:10","usedErrors":[392,397],"usedEvents":[403,1660,1666]}],"src":"0:2692:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bff46938168045ad05c1c7a1a6a70c46a360ef4433771c07dac2b7e14b46378864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DELEGATECALL PUSH10 0x38168045AD05C1C7A1A6 0xA7 0xC CHAINID LOG3 PUSH1 0xEF PREVRANDAO CALLER PUSH24 0x1C07DAC2B7E14B46378864736F6C63430008140033000000 ","sourceMap":"1330:11559:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bff46938168045ad05c1c7a1a6a70c46a360ef4433771c07dac2b7e14b46378864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DELEGATECALL PUSH10 0x38168045AD05C1C7A1A6 0xA7 0xC CHAINID LOG3 PUSH1 0xEF PREVRANDAO CALLER PUSH24 0x1C07DAC2B7E14B46378864736F6C63430008140033000000 ","sourceMap":"1330:11559:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}"}},"contracts/Bank.sol":{"Bank":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"WithDraw","type":"event"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"addFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allowedCallers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_allowedCaller","type":"address"}],"name":"setAllowCaller","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"subFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withDraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1452":{"entryPoint":null,"id":1452,"parameterSlots":0,"returnSlots":0},"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":153,"id":525,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:11","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:11","statements":[{"nodeType":"YulAssignment","src":"62:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:11"},"nodeType":"YulFunctionCall","src":"73:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:11","type":""}],"src":"7:126:11"},{"body":{"nodeType":"YulBlock","src":"184:51:11","statements":[{"nodeType":"YulAssignment","src":"194:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:11"},"nodeType":"YulFunctionCall","src":"205:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:11","type":""}],"src":"139:96:11"},{"body":{"nodeType":"YulBlock","src":"306:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:11"},"nodeType":"YulFunctionCall","src":"328:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:11"},"nodeType":"YulFunctionCall","src":"316:37:11"},"nodeType":"YulExpressionStatement","src":"316:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:11","type":""}],"src":"241:118:11"},{"body":{"nodeType":"YulBlock","src":"463:124:11","statements":[{"nodeType":"YulAssignment","src":"473:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:11"},"nodeType":"YulFunctionCall","src":"481:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:11"},"nodeType":"YulFunctionCall","src":"562:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:11"},"nodeType":"YulFunctionCall","src":"509:71:11"},"nodeType":"YulExpressionStatement","src":"509:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:11","type":""}],"src":"365:222:11"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610eeb806101c86000396000f3fe6080604052600436106100915760003560e01c8063bd53915a11610059578063bd53915a14610167578063bf32619114610190578063d0e30db0146101cd578063f2fde38b146101d7578063f968954e1461020057610091565b806314174f331461009657806370a08231146100bf578063715018a6146100fc5780638da5cb5b14610113578063bc4b33651461013e575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610ac9565b610229565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610b54565b6103c6565b6040516100f39190610b90565b60405180910390f35b34801561010857600080fd5b5061011161040f565b005b34801561011f57600080fd5b50610128610423565b6040516101359190610bba565b60405180910390f35b34801561014a57600080fd5b5061016560048036038101906101609190610bd5565b61044c565b005b34801561017357600080fd5b5061018e60048036038101906101899190610b54565b6105c0565b005b34801561019c57600080fd5b506101b760048036038101906101b29190610ac9565b61062e565b6040516101c49190610bba565b60405180910390f35b6101d561066d565b005b3480156101e357600080fd5b506101fe60048036038101906101f99190610b54565b610741565b005b34801561020c57600080fd5b5061022760048036038101906102229190610bd5565b6107c7565b005b6000811161026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610c72565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490610cde565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033c9190610d2d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610389573d6000803e3d6000fd5b507f14b43ca4c63c5423006ad978eab8a14386476b52f1d4728070ea20a36f13e83b33826040516103bb929190610d61565b60405180910390a150565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61041761093b565b61042160006109c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000805b6002805490508160ff1610156104ec5760028160ff168154811061047757610476610d8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036104d957600191505b80806104e490610dc6565b915050610450565b508061052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610e61565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105789190610e81565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6105c861093b565b6002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6002818154811061063e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600034116106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790610c72565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ff9190610e81565b925050819055507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051610737929190610d61565b60405180910390a1565b61074961093b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107bb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107b29190610bba565b60405180910390fd5b6107c4816109c2565b50565b6000805b6002805490508160ff1610156108675760028160ff16815481106107f2576107f1610d8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361085457600191505b808061085f90610dc6565b9150506107cb565b50806108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90610e61565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108f39190610d2d565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b610943610a86565b73ffffffffffffffffffffffffffffffffffffffff16610961610423565b73ffffffffffffffffffffffffffffffffffffffff16146109c057610984610a86565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109b79190610bba565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610aa681610a93565b8114610ab157600080fd5b50565b600081359050610ac381610a9d565b92915050565b600060208284031215610adf57610ade610a8e565b5b6000610aed84828501610ab4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2182610af6565b9050919050565b610b3181610b16565b8114610b3c57600080fd5b50565b600081359050610b4e81610b28565b92915050565b600060208284031215610b6a57610b69610a8e565b5b6000610b7884828501610b3f565b91505092915050565b610b8a81610a93565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b610bb481610b16565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b60008060408385031215610bec57610beb610a8e565b5b6000610bfa85828601610b3f565b9250506020610c0b85828601610ab4565b9150509250929050565b600082825260208201905092915050565b7f616d6f756e7420746f20736d616c6c0000000000000000000000000000000000600082015250565b6000610c5c600f83610c15565b9150610c6782610c26565b602082019050919050565b60006020820190508181036000830152610c8b81610c4f565b9050919050565b7f6e6f20656e6f7567746820616d6f756e74000000000000000000000000000000600082015250565b6000610cc8601183610c15565b9150610cd382610c92565b602082019050919050565b60006020820190508181036000830152610cf781610cbb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3882610a93565b9150610d4383610a93565b9250828203905081811115610d5b57610d5a610cfe565b5b92915050565b6000604082019050610d766000830185610bab565b610d836020830184610b81565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b6000610dd182610db9565b915060ff8203610de457610de3610cfe565b5b600182019050919050565b7f4163636573732064656e6965643a2043616c6c6572206973206e6f742074686560008201527f20616c6c6f77656420636f6e7472616374000000000000000000000000000000602082015250565b6000610e4b603183610c15565b9150610e5682610def565b604082019050919050565b60006020820190508181036000830152610e7a81610e3e565b9050919050565b6000610e8c82610a93565b9150610e9783610a93565b9250828201905080821115610eaf57610eae610cfe565b5b9291505056fea26469706673582212209337ef8fb5a69b56dc1025818735e7e6920f192f87a2876bbc4dcec99d6baac164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEEB DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD53915A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBD53915A EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xBF326191 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF968954E EQ PUSH2 0x200 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x14174F33 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xBC4B3365 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E4 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x14B43CA4C63C5423006AD978EAB8A14386476B52F1D4728070EA20A36F13E83B CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP3 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x421 PUSH1 0x0 PUSH2 0x9C2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D9 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x4E4 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x450 JUMP JUMPDEST POP DUP1 PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x737 SWAP3 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x749 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x9C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x867 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x854 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x85F SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CB JUMP JUMPDEST POP DUP1 PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x943 PUSH2 0xA86 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x961 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C0 JUMPI PUSH2 0x984 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA6 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC3 DUP2 PUSH2 0xA9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAED DUP5 DUP3 DUP6 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0xB16 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4E DUP2 PUSH2 0xB28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB78 DUP5 DUP3 DUP6 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB8A DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xB16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBEB PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFA DUP6 DUP3 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0B DUP6 DUP3 DUP7 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E7420746F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5C PUSH1 0xF DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 DUP3 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC8B DUP2 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F20656E6F7567746820616D6F756E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC8 PUSH1 0x11 DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD3 DUP3 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCF7 DUP2 PUSH2 0xCBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD38 DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP PUSH2 0xD43 DUP4 PUSH2 0xA93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5A PUSH2 0xCFE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0xD83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD1 DUP3 PUSH2 0xDB9 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0xCFE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636573732064656E6965643A2043616C6C6572206973206E6F7420746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616C6C6F77656420636F6E7472616374000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4B PUSH1 0x31 DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP PUSH2 0xE56 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7A DUP2 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8C DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP PUSH2 0xE97 DUP4 PUSH2 0xA93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAE PUSH2 0xCFE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATACOPY 0xEF DUP16 0xB5 0xA6 SWAP12 JUMP 0xDC LT 0x25 DUP2 DUP8 CALLDATALOAD 0xE7 0xE6 SWAP3 0xF NOT 0x2F DUP8 LOG2 DUP8 PUSH12 0xBC4DCEC99D6BAAC164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"499:1990:9:-:0;;;843:241;;;;;;;;;;865:10;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;499:1990:9;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;499:1990:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_463":{"entryPoint":2363,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_722":{"entryPoint":2694,"id":722,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":2498,"id":525,"parameterSlots":1,"returnSlots":0},"@addFunds_1523":{"entryPoint":1100,"id":1523,"parameterSlots":2,"returnSlots":0},"@allowedCallers_1432":{"entryPoint":1582,"id":1432,"parameterSlots":0,"returnSlots":0},"@balanceOf_1555":{"entryPoint":966,"id":1555,"parameterSlots":1,"returnSlots":1},"@deposit_1627":{"entryPoint":1645,"id":1627,"parameterSlots":0,"returnSlots":0},"@owner_446":{"entryPoint":1059,"id":446,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1039,"id":477,"parameterSlots":0,"returnSlots":0},"@setAllowCaller_1466":{"entryPoint":1472,"id":1466,"parameterSlots":1,"returnSlots":0},"@subFunds_1543":{"entryPoint":1991,"id":1543,"parameterSlots":2,"returnSlots":0},"@transferOwnership_505":{"entryPoint":1857,"id":505,"parameterSlots":1,"returnSlots":0},"@withDraw_1600":{"entryPoint":553,"id":1600,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3029,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2987,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee_to_t_string_memory_ptr_fromStack":{"entryPoint":3646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656_to_t_string_memory_ptr_fromStack":{"entryPoint":3151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e_to_t_string_memory_ptr_fromStack":{"entryPoint":3259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2945,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3425,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3186,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2960,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3093,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3713,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3373,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2838,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2806,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2707,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3513,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":3526,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3326,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3466,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2702,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee":{"entryPoint":3567,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656":{"entryPoint":3110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e":{"entryPoint":3218,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2856,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2717,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7572:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"597:87:11","statements":[{"nodeType":"YulAssignment","src":"607:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:11"},"nodeType":"YulFunctionCall","src":"616:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:11"},"nodeType":"YulFunctionCall","src":"645:33:11"},"nodeType":"YulExpressionStatement","src":"645:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:11","type":""}],"src":"545:139:11"},{"body":{"nodeType":"YulBlock","src":"756:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:11"},"nodeType":"YulFunctionCall","src":"804:79:11"},"nodeType":"YulExpressionStatement","src":"804:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:11"},"nodeType":"YulFunctionCall","src":"773:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:11"},"nodeType":"YulFunctionCall","src":"769:32:11"},"nodeType":"YulIf","src":"766:119:11"},{"nodeType":"YulBlock","src":"895:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:11","type":""}]},{"nodeType":"YulAssignment","src":"939:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:11"},"nodeType":"YulFunctionCall","src":"970:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:11"},"nodeType":"YulFunctionCall","src":"949:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:11","type":""}],"src":"690:329:11"},{"body":{"nodeType":"YulBlock","src":"1070:81:11","statements":[{"nodeType":"YulAssignment","src":"1080:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1095:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1102:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1091:3:11"},"nodeType":"YulFunctionCall","src":"1091:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1080:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1052:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1062:7:11","type":""}],"src":"1025:126:11"},{"body":{"nodeType":"YulBlock","src":"1202:51:11","statements":[{"nodeType":"YulAssignment","src":"1212:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1241:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1223:17:11"},"nodeType":"YulFunctionCall","src":"1223:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1212:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1184:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1194:7:11","type":""}],"src":"1157:96:11"},{"body":{"nodeType":"YulBlock","src":"1302:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1359:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1368:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1371:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1361:6:11"},"nodeType":"YulFunctionCall","src":"1361:12:11"},"nodeType":"YulExpressionStatement","src":"1361:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1350:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1332:17:11"},"nodeType":"YulFunctionCall","src":"1332:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1322:2:11"},"nodeType":"YulFunctionCall","src":"1322:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1315:6:11"},"nodeType":"YulFunctionCall","src":"1315:43:11"},"nodeType":"YulIf","src":"1312:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1295:5:11","type":""}],"src":"1259:122:11"},{"body":{"nodeType":"YulBlock","src":"1439:87:11","statements":[{"nodeType":"YulAssignment","src":"1449:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1471:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1458:12:11"},"nodeType":"YulFunctionCall","src":"1458:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1449:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1514:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1487:26:11"},"nodeType":"YulFunctionCall","src":"1487:33:11"},"nodeType":"YulExpressionStatement","src":"1487:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1425:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1433:5:11","type":""}],"src":"1387:139:11"},{"body":{"nodeType":"YulBlock","src":"1598:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"1644:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1646:77:11"},"nodeType":"YulFunctionCall","src":"1646:79:11"},"nodeType":"YulExpressionStatement","src":"1646:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1619:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1628:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1615:3:11"},"nodeType":"YulFunctionCall","src":"1615:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1611:3:11"},"nodeType":"YulFunctionCall","src":"1611:32:11"},"nodeType":"YulIf","src":"1608:119:11"},{"nodeType":"YulBlock","src":"1737:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1752:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1766:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1756:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1781:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1827:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:11"},"nodeType":"YulFunctionCall","src":"1812:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1836:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1791:20:11"},"nodeType":"YulFunctionCall","src":"1791:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1781:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1568:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1579:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1591:6:11","type":""}],"src":"1532:329:11"},{"body":{"nodeType":"YulBlock","src":"1932:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1949:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1972:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1954:17:11"},"nodeType":"YulFunctionCall","src":"1954:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1942:6:11"},"nodeType":"YulFunctionCall","src":"1942:37:11"},"nodeType":"YulExpressionStatement","src":"1942:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1920:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1927:3:11","type":""}],"src":"1867:118:11"},{"body":{"nodeType":"YulBlock","src":"2089:124:11","statements":[{"nodeType":"YulAssignment","src":"2099:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2111:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2122:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2107:3:11"},"nodeType":"YulFunctionCall","src":"2107:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2099:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2179:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2203:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:11"},"nodeType":"YulFunctionCall","src":"2188:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2135:43:11"},"nodeType":"YulFunctionCall","src":"2135:71:11"},"nodeType":"YulExpressionStatement","src":"2135:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2061:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2073:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2084:4:11","type":""}],"src":"1991:222:11"},{"body":{"nodeType":"YulBlock","src":"2284:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2301:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2324:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2306:17:11"},"nodeType":"YulFunctionCall","src":"2306:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:11"},"nodeType":"YulFunctionCall","src":"2294:37:11"},"nodeType":"YulExpressionStatement","src":"2294:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2272:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2279:3:11","type":""}],"src":"2219:118:11"},{"body":{"nodeType":"YulBlock","src":"2441:124:11","statements":[{"nodeType":"YulAssignment","src":"2451:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2474:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2459:3:11"},"nodeType":"YulFunctionCall","src":"2459:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2451:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2531:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2544:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2555:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2540:3:11"},"nodeType":"YulFunctionCall","src":"2540:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2487:43:11"},"nodeType":"YulFunctionCall","src":"2487:71:11"},"nodeType":"YulExpressionStatement","src":"2487:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2413:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2425:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2436:4:11","type":""}],"src":"2343:222:11"},{"body":{"nodeType":"YulBlock","src":"2654:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2700:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2702:77:11"},"nodeType":"YulFunctionCall","src":"2702:79:11"},"nodeType":"YulExpressionStatement","src":"2702:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2675:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2671:3:11"},"nodeType":"YulFunctionCall","src":"2671:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2696:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2667:3:11"},"nodeType":"YulFunctionCall","src":"2667:32:11"},"nodeType":"YulIf","src":"2664:119:11"},{"nodeType":"YulBlock","src":"2793:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2808:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2822:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2812:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2837:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2872:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2883:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2868:3:11"},"nodeType":"YulFunctionCall","src":"2868:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2892:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2847:20:11"},"nodeType":"YulFunctionCall","src":"2847:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2837:6:11"}]}]},{"nodeType":"YulBlock","src":"2920:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2935:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2949:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2939:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2965:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3000:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3011:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2996:3:11"},"nodeType":"YulFunctionCall","src":"2996:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3020:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2975:20:11"},"nodeType":"YulFunctionCall","src":"2975:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2965:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2616:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2627:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2639:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2647:6:11","type":""}],"src":"2571:474:11"},{"body":{"nodeType":"YulBlock","src":"3147:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3164:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3169:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3157:6:11"},"nodeType":"YulFunctionCall","src":"3157:19:11"},"nodeType":"YulExpressionStatement","src":"3157:19:11"},{"nodeType":"YulAssignment","src":"3185:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3204:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3209:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3200:3:11"},"nodeType":"YulFunctionCall","src":"3200:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3185:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3119:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3124:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3135:11:11","type":""}],"src":"3051:169:11"},{"body":{"nodeType":"YulBlock","src":"3332:59:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3354:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3362:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3350:3:11"},"nodeType":"YulFunctionCall","src":"3350:14:11"},{"hexValue":"616d6f756e7420746f20736d616c6c","kind":"string","nodeType":"YulLiteral","src":"3366:17:11","type":"","value":"amount to small"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3343:6:11"},"nodeType":"YulFunctionCall","src":"3343:41:11"},"nodeType":"YulExpressionStatement","src":"3343:41:11"}]},"name":"store_literal_in_memory_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3324:6:11","type":""}],"src":"3226:165:11"},{"body":{"nodeType":"YulBlock","src":"3543:220:11","statements":[{"nodeType":"YulAssignment","src":"3553:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3619:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3624:2:11","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3560:58:11"},"nodeType":"YulFunctionCall","src":"3560:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3553:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3725:3:11"}],"functionName":{"name":"store_literal_in_memory_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656","nodeType":"YulIdentifier","src":"3636:88:11"},"nodeType":"YulFunctionCall","src":"3636:93:11"},"nodeType":"YulExpressionStatement","src":"3636:93:11"},{"nodeType":"YulAssignment","src":"3738:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3749:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3754:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3745:3:11"},"nodeType":"YulFunctionCall","src":"3745:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3738:3:11"}]}]},"name":"abi_encode_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3531:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3539:3:11","type":""}],"src":"3397:366:11"},{"body":{"nodeType":"YulBlock","src":"3940:248:11","statements":[{"nodeType":"YulAssignment","src":"3950:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3962:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3973:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3958:3:11"},"nodeType":"YulFunctionCall","src":"3958:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3950:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3997:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4008:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3993:3:11"},"nodeType":"YulFunctionCall","src":"3993:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4016:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4012:3:11"},"nodeType":"YulFunctionCall","src":"4012:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3986:6:11"},"nodeType":"YulFunctionCall","src":"3986:47:11"},"nodeType":"YulExpressionStatement","src":"3986:47:11"},{"nodeType":"YulAssignment","src":"4042:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4176:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4050:124:11"},"nodeType":"YulFunctionCall","src":"4050:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4042:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3920:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3935:4:11","type":""}],"src":"3769:419:11"},{"body":{"nodeType":"YulBlock","src":"4300:61:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4322:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4330:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4318:3:11"},"nodeType":"YulFunctionCall","src":"4318:14:11"},{"hexValue":"6e6f20656e6f7567746820616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"4334:19:11","type":"","value":"no enougth amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4311:6:11"},"nodeType":"YulFunctionCall","src":"4311:43:11"},"nodeType":"YulExpressionStatement","src":"4311:43:11"}]},"name":"store_literal_in_memory_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4292:6:11","type":""}],"src":"4194:167:11"},{"body":{"nodeType":"YulBlock","src":"4513:220:11","statements":[{"nodeType":"YulAssignment","src":"4523:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4589:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4594:2:11","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4530:58:11"},"nodeType":"YulFunctionCall","src":"4530:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4523:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4695:3:11"}],"functionName":{"name":"store_literal_in_memory_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e","nodeType":"YulIdentifier","src":"4606:88:11"},"nodeType":"YulFunctionCall","src":"4606:93:11"},"nodeType":"YulExpressionStatement","src":"4606:93:11"},{"nodeType":"YulAssignment","src":"4708:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4719:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4724:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:11"},"nodeType":"YulFunctionCall","src":"4715:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4708:3:11"}]}]},"name":"abi_encode_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4501:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4509:3:11","type":""}],"src":"4367:366:11"},{"body":{"nodeType":"YulBlock","src":"4910:248:11","statements":[{"nodeType":"YulAssignment","src":"4920:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4932:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4943:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4928:3:11"},"nodeType":"YulFunctionCall","src":"4928:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4920:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4967:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4978:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4963:3:11"},"nodeType":"YulFunctionCall","src":"4963:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4986:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4992:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4982:3:11"},"nodeType":"YulFunctionCall","src":"4982:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4956:6:11"},"nodeType":"YulFunctionCall","src":"4956:47:11"},"nodeType":"YulExpressionStatement","src":"4956:47:11"},{"nodeType":"YulAssignment","src":"5012:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5146:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5020:124:11"},"nodeType":"YulFunctionCall","src":"5020:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5012:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4890:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4905:4:11","type":""}],"src":"4739:419:11"},{"body":{"nodeType":"YulBlock","src":"5192:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5209:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5212:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5202:6:11"},"nodeType":"YulFunctionCall","src":"5202:88:11"},"nodeType":"YulExpressionStatement","src":"5202:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5306:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5309:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5299:6:11"},"nodeType":"YulFunctionCall","src":"5299:15:11"},"nodeType":"YulExpressionStatement","src":"5299:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5330:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5333:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5323:6:11"},"nodeType":"YulFunctionCall","src":"5323:15:11"},"nodeType":"YulExpressionStatement","src":"5323:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5164:180:11"},{"body":{"nodeType":"YulBlock","src":"5395:149:11","statements":[{"nodeType":"YulAssignment","src":"5405:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5428:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5410:17:11"},"nodeType":"YulFunctionCall","src":"5410:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5405:1:11"}]},{"nodeType":"YulAssignment","src":"5439:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5462:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5444:17:11"},"nodeType":"YulFunctionCall","src":"5444:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5439:1:11"}]},{"nodeType":"YulAssignment","src":"5473:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5485:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"5488:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5481:3:11"},"nodeType":"YulFunctionCall","src":"5481:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5473:4:11"}]},{"body":{"nodeType":"YulBlock","src":"5515:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5517:16:11"},"nodeType":"YulFunctionCall","src":"5517:18:11"},"nodeType":"YulExpressionStatement","src":"5517:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5506:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"5512:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5503:2:11"},"nodeType":"YulFunctionCall","src":"5503:11:11"},"nodeType":"YulIf","src":"5500:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5381:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"5384:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5390:4:11","type":""}],"src":"5350:194:11"},{"body":{"nodeType":"YulBlock","src":"5676:206:11","statements":[{"nodeType":"YulAssignment","src":"5686:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5698:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5709:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5694:3:11"},"nodeType":"YulFunctionCall","src":"5694:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5686:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5766:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5779:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5790:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5775:3:11"},"nodeType":"YulFunctionCall","src":"5775:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5722:43:11"},"nodeType":"YulFunctionCall","src":"5722:71:11"},"nodeType":"YulExpressionStatement","src":"5722:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5847:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5860:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5871:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5856:3:11"},"nodeType":"YulFunctionCall","src":"5856:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5803:43:11"},"nodeType":"YulFunctionCall","src":"5803:72:11"},"nodeType":"YulExpressionStatement","src":"5803:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5640:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5652:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5660:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5671:4:11","type":""}],"src":"5550:332:11"},{"body":{"nodeType":"YulBlock","src":"5916:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5933:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5936:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5926:6:11"},"nodeType":"YulFunctionCall","src":"5926:88:11"},"nodeType":"YulExpressionStatement","src":"5926:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6030:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6033:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6023:6:11"},"nodeType":"YulFunctionCall","src":"6023:15:11"},"nodeType":"YulExpressionStatement","src":"6023:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6054:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6057:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6047:6:11"},"nodeType":"YulFunctionCall","src":"6047:15:11"},"nodeType":"YulExpressionStatement","src":"6047:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5888:180:11"},{"body":{"nodeType":"YulBlock","src":"6117:43:11","statements":[{"nodeType":"YulAssignment","src":"6127:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6142:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6149:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6138:3:11"},"nodeType":"YulFunctionCall","src":"6138:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6127:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6099:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6109:7:11","type":""}],"src":"6074:86:11"},{"body":{"nodeType":"YulBlock","src":"6207:126:11","statements":[{"nodeType":"YulAssignment","src":"6217:31:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6242:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6226:15:11"},"nodeType":"YulFunctionCall","src":"6226:22:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6217:5:11"}]},{"body":{"nodeType":"YulBlock","src":"6276:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6278:16:11"},"nodeType":"YulFunctionCall","src":"6278:18:11"},"nodeType":"YulExpressionStatement","src":"6278:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6263:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6270:4:11","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6260:2:11"},"nodeType":"YulFunctionCall","src":"6260:15:11"},"nodeType":"YulIf","src":"6257:41:11"},{"nodeType":"YulAssignment","src":"6307:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6318:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6325:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:11"},"nodeType":"YulFunctionCall","src":"6314:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6307:3:11"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6193:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6203:3:11","type":""}],"src":"6166:167:11"},{"body":{"nodeType":"YulBlock","src":"6445:130:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6467:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6475:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6463:3:11"},"nodeType":"YulFunctionCall","src":"6463:14:11"},{"hexValue":"4163636573732064656e6965643a2043616c6c6572206973206e6f7420746865","kind":"string","nodeType":"YulLiteral","src":"6479:34:11","type":"","value":"Access denied: Caller is not the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6456:6:11"},"nodeType":"YulFunctionCall","src":"6456:58:11"},"nodeType":"YulExpressionStatement","src":"6456:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6535:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6543:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6531:3:11"},"nodeType":"YulFunctionCall","src":"6531:15:11"},{"hexValue":"20616c6c6f77656420636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"6548:19:11","type":"","value":" allowed contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6524:6:11"},"nodeType":"YulFunctionCall","src":"6524:44:11"},"nodeType":"YulExpressionStatement","src":"6524:44:11"}]},"name":"store_literal_in_memory_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6437:6:11","type":""}],"src":"6339:236:11"},{"body":{"nodeType":"YulBlock","src":"6727:220:11","statements":[{"nodeType":"YulAssignment","src":"6737:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6803:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6808:2:11","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6744:58:11"},"nodeType":"YulFunctionCall","src":"6744:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6737:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6909:3:11"}],"functionName":{"name":"store_literal_in_memory_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee","nodeType":"YulIdentifier","src":"6820:88:11"},"nodeType":"YulFunctionCall","src":"6820:93:11"},"nodeType":"YulExpressionStatement","src":"6820:93:11"},{"nodeType":"YulAssignment","src":"6922:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6933:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6938:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6929:3:11"},"nodeType":"YulFunctionCall","src":"6929:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6922:3:11"}]}]},"name":"abi_encode_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6715:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6723:3:11","type":""}],"src":"6581:366:11"},{"body":{"nodeType":"YulBlock","src":"7124:248:11","statements":[{"nodeType":"YulAssignment","src":"7134:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7146:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7157:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7142:3:11"},"nodeType":"YulFunctionCall","src":"7142:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7134:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7181:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7192:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7177:3:11"},"nodeType":"YulFunctionCall","src":"7177:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7200:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7206:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7196:3:11"},"nodeType":"YulFunctionCall","src":"7196:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7170:6:11"},"nodeType":"YulFunctionCall","src":"7170:47:11"},"nodeType":"YulExpressionStatement","src":"7170:47:11"},{"nodeType":"YulAssignment","src":"7226:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7360:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7234:124:11"},"nodeType":"YulFunctionCall","src":"7234:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7226:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7104:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7119:4:11","type":""}],"src":"6953:419:11"},{"body":{"nodeType":"YulBlock","src":"7422:147:11","statements":[{"nodeType":"YulAssignment","src":"7432:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7455:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7437:17:11"},"nodeType":"YulFunctionCall","src":"7437:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7432:1:11"}]},{"nodeType":"YulAssignment","src":"7466:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7489:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7471:17:11"},"nodeType":"YulFunctionCall","src":"7471:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7466:1:11"}]},{"nodeType":"YulAssignment","src":"7500:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7511:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"7514:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7507:3:11"},"nodeType":"YulFunctionCall","src":"7507:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7500:3:11"}]},{"body":{"nodeType":"YulBlock","src":"7540:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7542:16:11"},"nodeType":"YulFunctionCall","src":"7542:18:11"},"nodeType":"YulExpressionStatement","src":"7542:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7532:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"7535:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7529:2:11"},"nodeType":"YulFunctionCall","src":"7529:10:11"},"nodeType":"YulIf","src":"7526:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7409:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"7412:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7418:3:11","type":""}],"src":"7378:191:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount to small\")\n\n    }\n\n    function abi_encode_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54fff46c004b38a11c59b98cf10e5d0f56dc1d3b23ae24944ef63984587ac656_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e(memPtr) {\n\n        mstore(add(memPtr, 0), \"no enougth amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbaa5b1d13ec64385f78cc4d45dd9a9392201fd8fcc795730d4c7f1f8726210e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access denied: Caller is not the\")\n\n        mstore(add(memPtr, 32), \" allowed contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_03a791fdd2ded24d28216fb155383644f438c7a3327b76c26c5b5d0b7ff0cfee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100915760003560e01c8063bd53915a11610059578063bd53915a14610167578063bf32619114610190578063d0e30db0146101cd578063f2fde38b146101d7578063f968954e1461020057610091565b806314174f331461009657806370a08231146100bf578063715018a6146100fc5780638da5cb5b14610113578063bc4b33651461013e575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610ac9565b610229565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610b54565b6103c6565b6040516100f39190610b90565b60405180910390f35b34801561010857600080fd5b5061011161040f565b005b34801561011f57600080fd5b50610128610423565b6040516101359190610bba565b60405180910390f35b34801561014a57600080fd5b5061016560048036038101906101609190610bd5565b61044c565b005b34801561017357600080fd5b5061018e60048036038101906101899190610b54565b6105c0565b005b34801561019c57600080fd5b506101b760048036038101906101b29190610ac9565b61062e565b6040516101c49190610bba565b60405180910390f35b6101d561066d565b005b3480156101e357600080fd5b506101fe60048036038101906101f99190610b54565b610741565b005b34801561020c57600080fd5b5061022760048036038101906102229190610bd5565b6107c7565b005b6000811161026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610c72565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490610cde565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033c9190610d2d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610389573d6000803e3d6000fd5b507f14b43ca4c63c5423006ad978eab8a14386476b52f1d4728070ea20a36f13e83b33826040516103bb929190610d61565b60405180910390a150565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61041761093b565b61042160006109c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000805b6002805490508160ff1610156104ec5760028160ff168154811061047757610476610d8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036104d957600191505b80806104e490610dc6565b915050610450565b508061052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610e61565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105789190610e81565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6105c861093b565b6002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6002818154811061063e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600034116106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790610c72565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ff9190610e81565b925050819055507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051610737929190610d61565b60405180910390a1565b61074961093b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107bb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107b29190610bba565b60405180910390fd5b6107c4816109c2565b50565b6000805b6002805490508160ff1610156108675760028160ff16815481106107f2576107f1610d8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361085457600191505b808061085f90610dc6565b9150506107cb565b50806108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90610e61565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108f39190610d2d565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b610943610a86565b73ffffffffffffffffffffffffffffffffffffffff16610961610423565b73ffffffffffffffffffffffffffffffffffffffff16146109c057610984610a86565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109b79190610bba565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610aa681610a93565b8114610ab157600080fd5b50565b600081359050610ac381610a9d565b92915050565b600060208284031215610adf57610ade610a8e565b5b6000610aed84828501610ab4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2182610af6565b9050919050565b610b3181610b16565b8114610b3c57600080fd5b50565b600081359050610b4e81610b28565b92915050565b600060208284031215610b6a57610b69610a8e565b5b6000610b7884828501610b3f565b91505092915050565b610b8a81610a93565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b610bb481610b16565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b60008060408385031215610bec57610beb610a8e565b5b6000610bfa85828601610b3f565b9250506020610c0b85828601610ab4565b9150509250929050565b600082825260208201905092915050565b7f616d6f756e7420746f20736d616c6c0000000000000000000000000000000000600082015250565b6000610c5c600f83610c15565b9150610c6782610c26565b602082019050919050565b60006020820190508181036000830152610c8b81610c4f565b9050919050565b7f6e6f20656e6f7567746820616d6f756e74000000000000000000000000000000600082015250565b6000610cc8601183610c15565b9150610cd382610c92565b602082019050919050565b60006020820190508181036000830152610cf781610cbb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3882610a93565b9150610d4383610a93565b9250828203905081811115610d5b57610d5a610cfe565b5b92915050565b6000604082019050610d766000830185610bab565b610d836020830184610b81565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b6000610dd182610db9565b915060ff8203610de457610de3610cfe565b5b600182019050919050565b7f4163636573732064656e6965643a2043616c6c6572206973206e6f742074686560008201527f20616c6c6f77656420636f6e7472616374000000000000000000000000000000602082015250565b6000610e4b603183610c15565b9150610e5682610def565b604082019050919050565b60006020820190508181036000830152610e7a81610e3e565b9050919050565b6000610e8c82610a93565b9150610e9783610a93565b9250828201905080821115610eaf57610eae610cfe565b5b9291505056fea26469706673582212209337ef8fb5a69b56dc1025818735e7e6920f192f87a2876bbc4dcec99d6baac164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD53915A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBD53915A EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xBF326191 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF968954E EQ PUSH2 0x200 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x14174F33 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xBC4B3365 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E4 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x14B43CA4C63C5423006AD978EAB8A14386476B52F1D4728070EA20A36F13E83B CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP3 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x421 PUSH1 0x0 PUSH2 0x9C2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D9 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x4E4 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x450 JUMP JUMPDEST POP DUP1 PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x737 SWAP3 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x749 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x9C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x867 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x854 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x85F SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CB JUMP JUMPDEST POP DUP1 PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x943 PUSH2 0xA86 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x961 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C0 JUMPI PUSH2 0x984 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA6 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC3 DUP2 PUSH2 0xA9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAED DUP5 DUP3 DUP6 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0xB16 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4E DUP2 PUSH2 0xB28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB78 DUP5 DUP3 DUP6 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB8A DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xB16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBEB PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFA DUP6 DUP3 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0B DUP6 DUP3 DUP7 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E7420746F20736D616C6C0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5C PUSH1 0xF DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 DUP3 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC8B DUP2 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F20656E6F7567746820616D6F756E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC8 PUSH1 0x11 DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD3 DUP3 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCF7 DUP2 PUSH2 0xCBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD38 DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP PUSH2 0xD43 DUP4 PUSH2 0xA93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5A PUSH2 0xCFE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0xD83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD1 DUP3 PUSH2 0xDB9 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0xCFE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636573732064656E6965643A2043616C6C6572206973206E6F7420746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616C6C6F77656420636F6E7472616374000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4B PUSH1 0x31 DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP PUSH2 0xE56 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7A DUP2 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8C DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP PUSH2 0xE97 DUP4 PUSH2 0xA93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAE PUSH2 0xCFE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 CALLDATACOPY 0xEF DUP16 0xB5 0xA6 SWAP12 JUMP 0xDC LT 0x25 DUP2 DUP8 CALLDATALOAD 0xE7 0xE6 SWAP3 0xF NOT 0x2F DUP8 LOG2 DUP8 PUSH12 0xBC4DCEC99D6BAAC164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"499:1990:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:291;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1907:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1596:151:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1090:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;701:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2311:176;;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1752:150:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2015:291;2085:1;2077:7;:9;2069:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;2142:7;2124:5;:17;2130:10;2124:17;;;;;;;;;;;;;;;;:25;2116:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2201:7;2180:5;:17;2186:10;2180:17;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2226:10;2218:28;;:37;2247:7;2218:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:29;2279:10;2291:7;2270:29;;;;;;;:::i;:::-;;;;;;;;2015:291;:::o;1907:103::-;1963:7;1989:5;:12;1995:5;1989:12;;;;;;;;;;;;;;;;1982:19;;1907:103;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1596:151:9:-;1356:10;1388:7;1384:113;1401:14;:21;;;;1399:1;:23;;;1384:113;;;1458:14;1473:1;1458:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1444:31;;:10;:31;;;1441:45;;1482:4;1476:10;;1441:45;1423:3;;;;;:::i;:::-;;;;1384:113;;;;1514:5;1506:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1733:7:::1;1718:5;:12;1724:5;1718:12;;;;;;;;;;;;;;;;:22;;;;:::i;:::-;1703:5;:12;1709:5;1703:12;;;;;;;;;;;;;;;:37;;;;1245:346:::0;1596:151;;:::o;1090:120::-;1531:13:2;:11;:13::i;:::-;1168:14:9::1;1188;1168:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1090:120:::0;:::o;701:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2311:176::-;2374:1;2364:9;:11;2356:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2426:9;2405:5;:17;2411:10;2405:17;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2450;2458:10;2470:9;2450:30;;;;;;;:::i;:::-;;;;;;;;2311:176::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1752:150:9:-;1356:10;1388:7;1384:113;1401:14;:21;;;;1399:1;:23;;;1384:113;;;1458:14;1473:1;1458:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1444:31;;:10;:31;;;1441:45;;1482:4;1476:10;;1441:45;1423:3;;;;;:::i;:::-;;;;1384:113;;;;1514:5;1506:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1888:7:::1;1873:5;:12;1879:5;1873:12;;;;;;;;;;;;;;;;:22;;;;:::i;:::-;1858:5;:12;1864:5;1858:12;;;;;;;;;;;;;;;:37;;;;1245:346:::0;1752:150;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:165::-;3366:17;3362:1;3354:6;3350:14;3343:41;3226:165;:::o;3397:366::-;3539:3;3560:67;3624:2;3619:3;3560:67;:::i;:::-;3553:74;;3636:93;3725:3;3636:93;:::i;:::-;3754:2;3749:3;3745:12;3738:19;;3397:366;;;:::o;3769:419::-;3935:4;3973:2;3962:9;3958:18;3950:26;;4022:9;4016:4;4012:20;4008:1;3997:9;3993:17;3986:47;4050:131;4176:4;4050:131;:::i;:::-;4042:139;;3769:419;;;:::o;4194:167::-;4334:19;4330:1;4322:6;4318:14;4311:43;4194:167;:::o;4367:366::-;4509:3;4530:67;4594:2;4589:3;4530:67;:::i;:::-;4523:74;;4606:93;4695:3;4606:93;:::i;:::-;4724:2;4719:3;4715:12;4708:19;;4367:366;;;:::o;4739:419::-;4905:4;4943:2;4932:9;4928:18;4920:26;;4992:9;4986:4;4982:20;4978:1;4967:9;4963:17;4956:47;5020:131;5146:4;5020:131;:::i;:::-;5012:139;;4739:419;;;:::o;5164:180::-;5212:77;5209:1;5202:88;5309:4;5306:1;5299:15;5333:4;5330:1;5323:15;5350:194;5390:4;5410:20;5428:1;5410:20;:::i;:::-;5405:25;;5444:20;5462:1;5444:20;:::i;:::-;5439:25;;5488:1;5485;5481:9;5473:17;;5512:1;5506:4;5503:11;5500:37;;;5517:18;;:::i;:::-;5500:37;5350:194;;;;:::o;5550:332::-;5671:4;5709:2;5698:9;5694:18;5686:26;;5722:71;5790:1;5779:9;5775:17;5766:6;5722:71;:::i;:::-;5803:72;5871:2;5860:9;5856:18;5847:6;5803:72;:::i;:::-;5550:332;;;;;:::o;5888:180::-;5936:77;5933:1;5926:88;6033:4;6030:1;6023:15;6057:4;6054:1;6047:15;6074:86;6109:7;6149:4;6142:5;6138:16;6127:27;;6074:86;;;:::o;6166:167::-;6203:3;6226:22;6242:5;6226:22;:::i;:::-;6217:31;;6270:4;6263:5;6260:15;6257:41;;6278:18;;:::i;:::-;6257:41;6325:1;6318:5;6314:13;6307:20;;6166:167;;;:::o;6339:236::-;6479:34;6475:1;6467:6;6463:14;6456:58;6548:19;6543:2;6535:6;6531:15;6524:44;6339:236;:::o;6581:366::-;6723:3;6744:67;6808:2;6803:3;6744:67;:::i;:::-;6737:74;;6820:93;6909:3;6820:93;:::i;:::-;6938:2;6933:3;6929:12;6922:19;;6581:366;;;:::o;6953:419::-;7119:4;7157:2;7146:9;7142:18;7134:26;;7206:9;7200:4;7196:20;7192:1;7181:9;7177:17;7170:47;7234:131;7360:4;7234:131;:::i;:::-;7226:139;;6953:419;;;:::o;7378:191::-;7418:3;7437:20;7455:1;7437:20;:::i;:::-;7432:25;;7471:20;7489:1;7471:20;:::i;:::-;7466:25;;7514:1;7511;7507:9;7500:16;;7535:3;7532:1;7529:10;7526:36;;;7542:18;;:::i;:::-;7526:36;7378:191;;;;:::o"},"methodIdentifiers":{"addFunds(address,uint256)":"bc4b3365","allowedCallers(uint256)":"bf326191","balanceOf(address)":"70a08231","deposit()":"d0e30db0","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAllowCaller(address)":"bd53915a","subFunds(address,uint256)":"f968954e","transferOwnership(address)":"f2fde38b","withDraw(uint256)":"14174f33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithDraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedCallers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allowedCaller\",\"type\":\"address\"}],\"name\":\"setAllowCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"subFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0xbfea0b49965210516b3aab62a4bb26bbef7046a0f40c0f264bef5a71e44c2b7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7747c1c7e02f557d72d34f7296fca62a014ba434251d85cbb7f182435834e5c7\",\"dweb:/ipfs/QmQeeyHVsnvdrCvcCsd6o7fGLPR2zjmMqrSmeYgnWTUvnV\"]}},\"version\":1}"},"IBank":{"abi":[{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"addFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"subFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withDraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addFunds(address,uint256)":"bc4b3365","balanceOf(address)":"70a08231","deposit()":"d0e30db0","subFunds(address,uint256)":"f968954e","withDraw(uint256)":"14174f33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"subFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"IBank\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0xbfea0b49965210516b3aab62a4bb26bbef7046a0f40c0f264bef5a71e44c2b7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7747c1c7e02f557d72d34f7296fca62a014ba434251d85cbb7f182435834e5c7\",\"dweb:/ipfs/QmQeeyHVsnvdrCvcCsd6o7fGLPR2zjmMqrSmeYgnWTUvnV\"]}},\"version\":1}"}},"contracts/Roulette.sol":{"Roulette":{"abi":[{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"beter","type":"address"},{"internalType":"uint256","name":"bet_type","type":"uint256"},{"internalType":"uint256","name":"bet_time","type":"uint256"},{"internalType":"uint256","name":"bet_num","type":"uint256"},{"internalType":"uint256","name":"bet_amounts","type":"uint256"}],"indexed":false,"internalType":"struct Roulette.Bet","name":"bet","type":"tuple"}],"name":"PlaceBet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"amounts","type":"uint256"}],"name":"WinFund","type":"event"},{"inputs":[],"name":"bank","outputs":[{"internalType":"contract Bank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bets","outputs":[{"internalType":"address","name":"beter","type":"address"},{"internalType":"uint256","name":"bet_type","type":"uint256"},{"internalType":"uint256","name":"bet_time","type":"uint256"},{"internalType":"uint256","name":"bet_num","type":"uint256"},{"internalType":"uint256","name":"bet_amounts","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"betsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"beter","type":"address"},{"internalType":"uint256","name":"bet_type","type":"uint256"},{"internalType":"uint256","name":"bet_time","type":"uint256"},{"internalType":"uint256","name":"bet_num","type":"uint256"},{"internalType":"uint256","name":"bet_amounts","type":"uint256"}],"internalType":"struct Roulette.Bet","name":"bet","type":"tuple"},{"internalType":"uint256","name":"_roll","type":"uint256"}],"name":"calcWinner","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getRollLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bet_type","type":"uint256"},{"internalType":"uint256","name":"_bet_num","type":"uint256"},{"internalType":"uint256","name":"_bet_amounts","type":"uint256"}],"name":"place_bet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"play","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rolleds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1682":{"entryPoint":null,"id":1682,"parameterSlots":1,"returnSlots":0},"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":263,"id":525,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":565,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":615,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":632,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":496,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":464,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":459,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":516,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1551:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"759:80:11","statements":[{"nodeType":"YulAssignment","src":"769:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:11"},"nodeType":"YulFunctionCall","src":"778:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:11"},"nodeType":"YulFunctionCall","src":"800:33:11"},"nodeType":"YulExpressionStatement","src":"800:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:11","type":""}],"src":"696:143:11"},{"body":{"nodeType":"YulBlock","src":"922:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:11"},"nodeType":"YulFunctionCall","src":"970:79:11"},"nodeType":"YulExpressionStatement","src":"970:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:11"},"nodeType":"YulFunctionCall","src":"939:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:11"},"nodeType":"YulFunctionCall","src":"935:32:11"},"nodeType":"YulIf","src":"932:119:11"},{"nodeType":"YulBlock","src":"1061:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:11"},"nodeType":"YulFunctionCall","src":"1147:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:11"},"nodeType":"YulFunctionCall","src":"1115:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:11","type":""}],"src":"845:351:11"},{"body":{"nodeType":"YulBlock","src":"1267:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1284:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1307:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1289:17:11"},"nodeType":"YulFunctionCall","src":"1289:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1277:6:11"},"nodeType":"YulFunctionCall","src":"1277:37:11"},"nodeType":"YulExpressionStatement","src":"1277:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1255:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1262:3:11","type":""}],"src":"1202:118:11"},{"body":{"nodeType":"YulBlock","src":"1424:124:11","statements":[{"nodeType":"YulAssignment","src":"1434:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:11"},"nodeType":"YulFunctionCall","src":"1442:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1514:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:11"},"nodeType":"YulFunctionCall","src":"1523:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1470:43:11"},"nodeType":"YulFunctionCall","src":"1470:71:11"},"nodeType":"YulExpressionStatement","src":"1470:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1396:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:11","type":""}],"src":"1326:222:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620013cf380380620013cf833981810160405281019062000037919062000235565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000278565b60405180910390fd5b620000be816200010760201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000295565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fd82620001d0565b9050919050565b6200020f81620001f0565b81146200021b57600080fd5b50565b6000815190506200022f8162000204565b92915050565b6000602082840312156200024e576200024d620001cb565b5b60006200025e848285016200021e565b91505092915050565b6200027281620001f0565b82525050565b60006020820190506200028f600083018462000267565b92915050565b61112a80620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806376cdb03b1161007157806376cdb03b1461016a5780637c68f2b9146101885780638da5cb5b146101a457806393e84cd9146101c2578063bbd2e01e146101cc578063f2fde38b146101ea576100a9565b806322af00fa146100ae57806327a4fdb8146100e25780633eb380a0146101125780634e2bb54f14610130578063715018a614610160575b600080fd5b6100c860048036038101906100c39190610b0c565b610206565b6040516100d9959493929190610b89565b60405180910390f35b6100fc60048036038101906100f79190610b0c565b61026c565b6040516101099190610bdc565b60405180910390f35b61011a610290565b6040516101279190610bdc565b60405180910390f35b61014a60048036038101906101459190610d40565b61029d565b6040516101579190610bdc565b60405180910390f35b610168610333565b005b610172610347565b60405161017f9190610ddf565b60405180910390f35b6101a2600480360381019061019d9190610dfa565b61036d565b005b6101ac610517565b6040516101b99190610e4d565b60405180910390f35b6101ca610540565b005b6101d46107ce565b6040516101e19190610bdc565b60405180910390f35b61020460048036038101906101ff9190610e68565b6107db565b005b6002818154811061021657600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b6003818154811061027c57600080fd5b906000526020600020016000915090505481565b6000600380549050905090565b6000808360200151036102eb576102b382610861565b6102be5760016102c1565b60005b60ff168360600151036102e657600283608001516102df9190610ec4565b905061032d565b610328565b6001836020015103610327576002826103049190610f35565b836060015103610326576002836080015161031f9190610ec4565b905061032d565b5b5b600090505b92915050565b61033b6108b2565b6103456000610939565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001428152602001848152602001838152509050600281908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155608082015181600401555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f968954e33846040518363ffffffff1660e01b81526004016104a8929190610f66565b600060405180830381600087803b1580156104c257600080fd5b505af11580156104d6573d6000803e3d6000fd5b505050507f3e9db003453ae07fd7ab02f4e21dab9fc7545ec5476b9823d2b4c3baf223323f816040516105099190611015565b60405180910390a150505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105486108b2565b600061055460256109fd565b9050600381908060018154018082558091505060019003906000526020600020016000909190919091505560005b6002805490508110156107bc576000610645600283815481106105a8576105a7611030565b5b90600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815250508461029d565b905060008111156107a757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc4b3365600284815481106106a2576106a1611030565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016106f2929190610f66565b600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050507f79166ed647ea7e9efa3de349320bb43e28d04637a86429193d882d8f0e01fb436002838154811061075957610758611030565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260405161079a929190610f66565b60405180910390a16107a8565b5b5080806107b49061105f565b915050610582565b50600260006107cb9190610a45565b50565b6000600280549050905090565b6107e36108b2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108555760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161084c9190610e4d565b60405180910390fd5b61085e81610939565b50565b6000600b82108061087e575060128211801561087d5750601d82105b5b1561089a5760016002836108929190610f35565b1490506108ad565b60006002836108a99190610f35565b1490505b919050565b6108ba610a3d565b73ffffffffffffffffffffffffffffffffffffffff166108d8610517565b73ffffffffffffffffffffffffffffffffffffffff1614610937576108fb610a3d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161092e9190610e4d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000814442604051602001610a139291906110c8565b6040516020818303038152906040528051906020012060001c610a369190610f35565b9050919050565b600033905090565b5080546000825560050290600052602060002090810190610a669190610a69565b50565b5b80821115610ac357600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160009055600482016000905550600501610a6a565b5090565b6000604051905090565b600080fd5b6000819050919050565b610ae981610ad6565b8114610af457600080fd5b50565b600081359050610b0681610ae0565b92915050565b600060208284031215610b2257610b21610ad1565b5b6000610b3084828501610af7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6482610b39565b9050919050565b610b7481610b59565b82525050565b610b8381610ad6565b82525050565b600060a082019050610b9e6000830188610b6b565b610bab6020830187610b7a565b610bb86040830186610b7a565b610bc56060830185610b7a565b610bd26080830184610b7a565b9695505050505050565b6000602082019050610bf16000830184610b7a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c4582610bfc565b810181811067ffffffffffffffff82111715610c6457610c63610c0d565b5b80604052505050565b6000610c77610ac7565b9050610c838282610c3c565b919050565b610c9181610b59565b8114610c9c57600080fd5b50565b600081359050610cae81610c88565b92915050565b600060a08284031215610cca57610cc9610bf7565b5b610cd460a0610c6d565b90506000610ce484828501610c9f565b6000830152506020610cf884828501610af7565b6020830152506040610d0c84828501610af7565b6040830152506060610d2084828501610af7565b6060830152506080610d3484828501610af7565b60808301525092915050565b60008060c08385031215610d5757610d56610ad1565b5b6000610d6585828601610cb4565b92505060a0610d7685828601610af7565b9150509250929050565b6000819050919050565b6000610da5610da0610d9b84610b39565b610d80565b610b39565b9050919050565b6000610db782610d8a565b9050919050565b6000610dc982610dac565b9050919050565b610dd981610dbe565b82525050565b6000602082019050610df46000830184610dd0565b92915050565b600080600060608486031215610e1357610e12610ad1565b5b6000610e2186828701610af7565b9350506020610e3286828701610af7565b9250506040610e4386828701610af7565b9150509250925092565b6000602082019050610e626000830184610b6b565b92915050565b600060208284031215610e7e57610e7d610ad1565b5b6000610e8c84828501610c9f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ecf82610ad6565b9150610eda83610ad6565b9250828202610ee881610ad6565b91508282048414831517610eff57610efe610e95565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4082610ad6565b9150610f4b83610ad6565b925082610f5b57610f5a610f06565b5b828206905092915050565b6000604082019050610f7b6000830185610b6b565b610f886020830184610b7a565b9392505050565b610f9881610b59565b82525050565b610fa781610ad6565b82525050565b60a082016000820151610fc36000850182610f8f565b506020820151610fd66020850182610f9e565b506040820151610fe96040850182610f9e565b506060820151610ffc6060850182610f9e565b50608082015161100f6080850182610f9e565b50505050565b600060a08201905061102a6000830184610fad565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061106a82610ad6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361109c5761109b610e95565b5b600182019050919050565b6000819050919050565b6110c26110bd82610ad6565b6110a7565b82525050565b60006110d482856110b1565b6020820191506110e482846110b1565b602082019150819050939250505056fea2646970667358221220296f5882364b950c9486a1848db31681999c0008de300d594b18a896638c0bce64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13CF CODESIZE SUB DUP1 PUSH3 0x13CF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x235 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x295 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FD DUP3 PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH3 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x22F DUP2 PUSH3 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x24E JUMPI PUSH3 0x24D PUSH3 0x1CB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x25E DUP5 DUP3 DUP6 ADD PUSH3 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x272 DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x28F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x112A DUP1 PUSH3 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76CDB03B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x7C68F2B9 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x93E84CD9 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xBBD2E01E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EA JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x22AF00FA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x27A4FDB8 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x3EB380A0 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4E2BB54F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x172 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x2EB JUMPI PUSH2 0x2B3 DUP3 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x2BE JUMPI PUSH1 0x1 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND DUP4 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x2E6 JUMPI PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x32D JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x327 JUMPI PUSH1 0x2 DUP3 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x326 JUMPI PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x32D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33B PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH2 0x939 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF968954E CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x3E9DB003453AE07FD7AB02F4E21DAB9FC7545EC5476B9823D2B4C3BAF223323F DUP2 PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x548 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH1 0x25 PUSH2 0x9FD JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 PUSH2 0x645 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5A8 JUMPI PUSH2 0x5A7 PUSH2 0x1030 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC4B3365 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x1030 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F2 SWAP3 SWAP2 SWAP1 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x79166ED647EA7E9EFA3DE349320BB43E28D04637A86429193D882D8F0E01FB43 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x759 JUMPI PUSH2 0x758 PUSH2 0x1030 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x79A SWAP3 SWAP2 SWAP1 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7A8 JUMP JUMPDEST JUMPDEST POP DUP1 DUP1 PUSH2 0x7B4 SWAP1 PUSH2 0x105F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x582 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E3 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x855 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85E DUP2 PUSH2 0x939 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP3 LT DUP1 PUSH2 0x87E JUMPI POP PUSH1 0x12 DUP3 GT DUP1 ISZERO PUSH2 0x87D JUMPI POP PUSH1 0x1D DUP3 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x89A JUMPI PUSH1 0x1 PUSH1 0x2 DUP4 PUSH2 0x892 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST EQ SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0xA3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D8 PUSH2 0x517 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x937 JUMPI PUSH2 0x8FB PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PREVRANDAO TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA13 SWAP3 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x5 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xA69 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x5 ADD PUSH2 0xA6A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE9 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB30 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP3 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB74 DUP2 PUSH2 0xB59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xBAB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xBB8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xBC5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC45 DUP3 PUSH2 0xBFC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0xC0D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 PUSH2 0xAC7 JUMP JUMPDEST SWAP1 POP PUSH2 0xC83 DUP3 DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC91 DUP2 PUSH2 0xB59 JUMP JUMPDEST DUP2 EQ PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCAE DUP2 PUSH2 0xC88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0xBF7 JUMP JUMPDEST JUMPDEST PUSH2 0xCD4 PUSH1 0xA0 PUSH2 0xC6D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCE4 DUP5 DUP3 DUP6 ADD PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xCF8 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xD0C DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xD20 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xD34 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH2 0xD56 PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xD76 DUP6 DUP3 DUP7 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 PUSH2 0xDA0 PUSH2 0xD9B DUP5 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB7 DUP3 PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC9 DUP3 PUSH2 0xDAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD9 DUP2 PUSH2 0xDBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE21 DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE32 DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE43 DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8C DUP5 DUP3 DUP6 ADD PUSH2 0xC9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDA DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEE8 DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEFF JUMPI PUSH2 0xEFE PUSH2 0xE95 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF40 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4B DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xF06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF7B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xF88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF98 DUP2 PUSH2 0xB59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFA7 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xFC3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xF8F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFD6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFE9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFFC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x100F PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106A DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x109C JUMPI PUSH2 0x109B PUSH2 0xE95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C2 PUSH2 0x10BD DUP3 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 DUP6 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x10E4 DUP3 DUP5 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH16 0x5882364B950C9486A1848DB31681999C STOP ADDMOD 0xDE ADDRESS 0xD MSIZE 0x4B XOR 0xA8 SWAP7 PUSH4 0x8C0BCE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"100:2592:10:-:0;;;513:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:10;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;582:5:10::1;570:4;;:18;;;;;;;;;;;;;;;;;;513:82:::0;100:2592;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;100:2592:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_463":{"entryPoint":2226,"id":463,"parameterSlots":0,"returnSlots":0},"@_is_red_1799":{"entryPoint":2145,"id":1799,"parameterSlots":1,"returnSlots":1},"@_msgSender_722":{"entryPoint":2621,"id":722,"parameterSlots":0,"returnSlots":1},"@_random_1764":{"entryPoint":2557,"id":1764,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":2361,"id":525,"parameterSlots":1,"returnSlots":0},"@bank_1637":{"entryPoint":839,"id":1637,"parameterSlots":0,"returnSlots":0},"@betsLength_1732":{"entryPoint":1998,"id":1732,"parameterSlots":0,"returnSlots":1},"@bets_1652":{"entryPoint":518,"id":1652,"parameterSlots":0,"returnSlots":0},"@calcWinner_1855":{"entryPoint":669,"id":1855,"parameterSlots":2,"returnSlots":1},"@getRollLength_1741":{"entryPoint":656,"id":1741,"parameterSlots":0,"returnSlots":1},"@owner_446":{"entryPoint":1303,"id":446,"parameterSlots":0,"returnSlots":1},"@place_bet_1723":{"entryPoint":877,"id":1723,"parameterSlots":3,"returnSlots":0},"@play_1922":{"entryPoint":1344,"id":1922,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_477":{"entryPoint":819,"id":477,"parameterSlots":0,"returnSlots":0},"@rolleds_1655":{"entryPoint":620,"id":1655,"parameterSlots":0,"returnSlots":0},"@transferOwnership_505":{"entryPoint":2011,"id":505,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Bet_$1648_memory_ptr":{"entryPoint":3252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Bet_$1648_memory_ptrt_uint256":{"entryPoint":3392,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":3578,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":3983,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2923,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_Bank_$1628_to_t_address_fromStack":{"entryPoint":3536,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Bet_$1648_memory_ptr_to_t_struct$_Bet_$1648_memory_ptr_fromStack":{"entryPoint":4013,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":3998,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2938,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":4273,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":4296,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3942,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2953,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_Bank_$1628__to_t_address__fromStack_reversed":{"entryPoint":3551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Bet_$1648_memory_ptr__to_t_struct$_Bet_$1648_memory_ptr__fromStack_reversed":{"entryPoint":4117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3036,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3181,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2759,"id":null,"parameterSlots":0,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3780,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2905,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2774,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_Bank_$1628_to_t_address":{"entryPoint":3518,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3500,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3466,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3132,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3456,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4191,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":4263,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":3893,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3733,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3846,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4144,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3085,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":3063,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2769,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3068,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3208,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2784,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11384:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"597:87:11","statements":[{"nodeType":"YulAssignment","src":"607:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:11"},"nodeType":"YulFunctionCall","src":"616:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:11"},"nodeType":"YulFunctionCall","src":"645:33:11"},"nodeType":"YulExpressionStatement","src":"645:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:11","type":""}],"src":"545:139:11"},{"body":{"nodeType":"YulBlock","src":"756:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:11"},"nodeType":"YulFunctionCall","src":"804:79:11"},"nodeType":"YulExpressionStatement","src":"804:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:11"},"nodeType":"YulFunctionCall","src":"773:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:11"},"nodeType":"YulFunctionCall","src":"769:32:11"},"nodeType":"YulIf","src":"766:119:11"},{"nodeType":"YulBlock","src":"895:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:11","type":""}]},{"nodeType":"YulAssignment","src":"939:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:11"},"nodeType":"YulFunctionCall","src":"970:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:11"},"nodeType":"YulFunctionCall","src":"949:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:11","type":""}],"src":"690:329:11"},{"body":{"nodeType":"YulBlock","src":"1070:81:11","statements":[{"nodeType":"YulAssignment","src":"1080:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1095:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1102:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1091:3:11"},"nodeType":"YulFunctionCall","src":"1091:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1080:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1052:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1062:7:11","type":""}],"src":"1025:126:11"},{"body":{"nodeType":"YulBlock","src":"1202:51:11","statements":[{"nodeType":"YulAssignment","src":"1212:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1241:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1223:17:11"},"nodeType":"YulFunctionCall","src":"1223:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1212:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1184:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1194:7:11","type":""}],"src":"1157:96:11"},{"body":{"nodeType":"YulBlock","src":"1324:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1346:17:11"},"nodeType":"YulFunctionCall","src":"1346:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:11"},"nodeType":"YulFunctionCall","src":"1334:37:11"},"nodeType":"YulExpressionStatement","src":"1334:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:11","type":""}],"src":"1259:118:11"},{"body":{"nodeType":"YulBlock","src":"1448:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1465:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1488:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1470:17:11"},"nodeType":"YulFunctionCall","src":"1470:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1458:6:11"},"nodeType":"YulFunctionCall","src":"1458:37:11"},"nodeType":"YulExpressionStatement","src":"1458:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1436:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1443:3:11","type":""}],"src":"1383:118:11"},{"body":{"nodeType":"YulBlock","src":"1717:454:11","statements":[{"nodeType":"YulAssignment","src":"1727:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1739:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1750:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1735:3:11"},"nodeType":"YulFunctionCall","src":"1735:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1727:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1808:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1821:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1832:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:11"},"nodeType":"YulFunctionCall","src":"1817:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1764:43:11"},"nodeType":"YulFunctionCall","src":"1764:71:11"},"nodeType":"YulExpressionStatement","src":"1764:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1889:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1913:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:11"},"nodeType":"YulFunctionCall","src":"1898:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1845:43:11"},"nodeType":"YulFunctionCall","src":"1845:72:11"},"nodeType":"YulExpressionStatement","src":"1845:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1971:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1984:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1995:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1980:3:11"},"nodeType":"YulFunctionCall","src":"1980:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1927:43:11"},"nodeType":"YulFunctionCall","src":"1927:72:11"},"nodeType":"YulExpressionStatement","src":"1927:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2053:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2077:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2062:3:11"},"nodeType":"YulFunctionCall","src":"2062:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2009:43:11"},"nodeType":"YulFunctionCall","src":"2009:72:11"},"nodeType":"YulExpressionStatement","src":"2009:72:11"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2135:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2159:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:11"},"nodeType":"YulFunctionCall","src":"2144:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2091:43:11"},"nodeType":"YulFunctionCall","src":"2091:73:11"},"nodeType":"YulExpressionStatement","src":"2091:73:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1657:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1669:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1677:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1685:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1693:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1701:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1712:4:11","type":""}],"src":"1507:664:11"},{"body":{"nodeType":"YulBlock","src":"2275:124:11","statements":[{"nodeType":"YulAssignment","src":"2285:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2308:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:11"},"nodeType":"YulFunctionCall","src":"2293:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2285:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2365:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2378:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2389:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:11"},"nodeType":"YulFunctionCall","src":"2374:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2321:43:11"},"nodeType":"YulFunctionCall","src":"2321:71:11"},"nodeType":"YulExpressionStatement","src":"2321:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2247:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2259:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2270:4:11","type":""}],"src":"2177:222:11"},{"body":{"nodeType":"YulBlock","src":"2494:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2511:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2514:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2504:6:11"},"nodeType":"YulFunctionCall","src":"2504:12:11"},"nodeType":"YulExpressionStatement","src":"2504:12:11"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"2405:117:11"},{"body":{"nodeType":"YulBlock","src":"2576:54:11","statements":[{"nodeType":"YulAssignment","src":"2586:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2604:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2611:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2600:3:11"},"nodeType":"YulFunctionCall","src":"2600:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2620:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2616:3:11"},"nodeType":"YulFunctionCall","src":"2616:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2596:3:11"},"nodeType":"YulFunctionCall","src":"2596:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2586:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2559:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2569:6:11","type":""}],"src":"2528:102:11"},{"body":{"nodeType":"YulBlock","src":"2664:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2684:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2674:6:11"},"nodeType":"YulFunctionCall","src":"2674:88:11"},"nodeType":"YulExpressionStatement","src":"2674:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2778:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2781:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2771:6:11"},"nodeType":"YulFunctionCall","src":"2771:15:11"},"nodeType":"YulExpressionStatement","src":"2771:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2802:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2805:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2795:6:11"},"nodeType":"YulFunctionCall","src":"2795:15:11"},"nodeType":"YulExpressionStatement","src":"2795:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2636:180:11"},{"body":{"nodeType":"YulBlock","src":"2865:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2875:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2897:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2927:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2905:21:11"},"nodeType":"YulFunctionCall","src":"2905:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2893:3:11"},"nodeType":"YulFunctionCall","src":"2893:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2879:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3044:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3046:16:11"},"nodeType":"YulFunctionCall","src":"3046:18:11"},"nodeType":"YulExpressionStatement","src":"3046:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2987:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2999:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2984:2:11"},"nodeType":"YulFunctionCall","src":"2984:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3023:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3035:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3020:2:11"},"nodeType":"YulFunctionCall","src":"3020:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2981:2:11"},"nodeType":"YulFunctionCall","src":"2981:62:11"},"nodeType":"YulIf","src":"2978:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3086:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3075:6:11"},"nodeType":"YulFunctionCall","src":"3075:22:11"},"nodeType":"YulExpressionStatement","src":"3075:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2851:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"2859:4:11","type":""}],"src":"2822:281:11"},{"body":{"nodeType":"YulBlock","src":"3150:88:11","statements":[{"nodeType":"YulAssignment","src":"3160:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3170:18:11"},"nodeType":"YulFunctionCall","src":"3170:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3160:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3219:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"3227:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3199:19:11"},"nodeType":"YulFunctionCall","src":"3199:33:11"},"nodeType":"YulExpressionStatement","src":"3199:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3134:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3143:6:11","type":""}],"src":"3109:129:11"},{"body":{"nodeType":"YulBlock","src":"3333:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3350:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3353:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3343:6:11"},"nodeType":"YulFunctionCall","src":"3343:12:11"},"nodeType":"YulExpressionStatement","src":"3343:12:11"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"3244:117:11"},{"body":{"nodeType":"YulBlock","src":"3410:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"3467:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:11"},"nodeType":"YulFunctionCall","src":"3469:12:11"},"nodeType":"YulExpressionStatement","src":"3469:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3433:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3458:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3440:17:11"},"nodeType":"YulFunctionCall","src":"3440:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3430:2:11"},"nodeType":"YulFunctionCall","src":"3430:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3423:6:11"},"nodeType":"YulFunctionCall","src":"3423:43:11"},"nodeType":"YulIf","src":"3420:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3403:5:11","type":""}],"src":"3367:122:11"},{"body":{"nodeType":"YulBlock","src":"3547:87:11","statements":[{"nodeType":"YulAssignment","src":"3557:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3579:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3566:12:11"},"nodeType":"YulFunctionCall","src":"3566:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3557:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3595:26:11"},"nodeType":"YulFunctionCall","src":"3595:33:11"},"nodeType":"YulExpressionStatement","src":"3595:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3533:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3541:5:11","type":""}],"src":"3495:139:11"},{"body":{"nodeType":"YulBlock","src":"3743:997:11","statements":[{"body":{"nodeType":"YulBlock","src":"3787:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"3789:77:11"},"nodeType":"YulFunctionCall","src":"3789:79:11"},"nodeType":"YulExpressionStatement","src":"3789:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3764:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3769:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3760:3:11"},"nodeType":"YulFunctionCall","src":"3760:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"3781:4:11","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3756:3:11"},"nodeType":"YulFunctionCall","src":"3756:30:11"},"nodeType":"YulIf","src":"3753:117:11"},{"nodeType":"YulAssignment","src":"3879:30:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3904:4:11","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3888:15:11"},"nodeType":"YulFunctionCall","src":"3888:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3879:5:11"}]},{"nodeType":"YulBlock","src":"3919:151:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3955:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3969:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3959:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3995:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4002:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:11"},"nodeType":"YulFunctionCall","src":"3991:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4034:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4045:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4030:3:11"},"nodeType":"YulFunctionCall","src":"4030:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"4054:3:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4009:20:11"},"nodeType":"YulFunctionCall","src":"4009:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3984:6:11"},"nodeType":"YulFunctionCall","src":"3984:75:11"},"nodeType":"YulExpressionStatement","src":"3984:75:11"}]},{"nodeType":"YulBlock","src":"4080:155:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4119:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4133:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4123:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4160:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4167:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4156:3:11"},"nodeType":"YulFunctionCall","src":"4156:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4199:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4210:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:11"},"nodeType":"YulFunctionCall","src":"4195:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"4219:3:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4174:20:11"},"nodeType":"YulFunctionCall","src":"4174:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4149:6:11"},"nodeType":"YulFunctionCall","src":"4149:75:11"},"nodeType":"YulExpressionStatement","src":"4149:75:11"}]},{"nodeType":"YulBlock","src":"4245:155:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4284:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4298:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4288:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4325:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4332:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:11"},"nodeType":"YulFunctionCall","src":"4321:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4375:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:11"},"nodeType":"YulFunctionCall","src":"4360:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"4384:3:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4339:20:11"},"nodeType":"YulFunctionCall","src":"4339:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4314:6:11"},"nodeType":"YulFunctionCall","src":"4314:75:11"},"nodeType":"YulExpressionStatement","src":"4314:75:11"}]},{"nodeType":"YulBlock","src":"4410:154:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4448:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4462:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4452:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4489:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4496:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4485:3:11"},"nodeType":"YulFunctionCall","src":"4485:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4539:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:11"},"nodeType":"YulFunctionCall","src":"4524:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"4548:3:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4503:20:11"},"nodeType":"YulFunctionCall","src":"4503:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4478:6:11"},"nodeType":"YulFunctionCall","src":"4478:75:11"},"nodeType":"YulExpressionStatement","src":"4478:75:11"}]},{"nodeType":"YulBlock","src":"4574:159:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4616:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4630:3:11","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4620:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4658:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4665:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4654:3:11"},"nodeType":"YulFunctionCall","src":"4654:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4708:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:11"},"nodeType":"YulFunctionCall","src":"4693:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"4717:3:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4672:20:11"},"nodeType":"YulFunctionCall","src":"4672:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4647:6:11"},"nodeType":"YulFunctionCall","src":"4647:75:11"},"nodeType":"YulExpressionStatement","src":"4647:75:11"}]}]},"name":"abi_decode_t_struct$_Bet_$1648_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3718:9:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3729:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3737:5:11","type":""}],"src":"3667:1073:11"},{"body":{"nodeType":"YulBlock","src":"4850:414:11","statements":[{"body":{"nodeType":"YulBlock","src":"4897:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4899:77:11"},"nodeType":"YulFunctionCall","src":"4899:79:11"},"nodeType":"YulExpressionStatement","src":"4899:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4871:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4880:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4867:3:11"},"nodeType":"YulFunctionCall","src":"4867:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4892:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4863:3:11"},"nodeType":"YulFunctionCall","src":"4863:33:11"},"nodeType":"YulIf","src":"4860:120:11"},{"nodeType":"YulBlock","src":"4990:138:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5005:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5019:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5009:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5034:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5090:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5101:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5086:3:11"},"nodeType":"YulFunctionCall","src":"5086:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5110:7:11"}],"functionName":{"name":"abi_decode_t_struct$_Bet_$1648_memory_ptr","nodeType":"YulIdentifier","src":"5044:41:11"},"nodeType":"YulFunctionCall","src":"5044:74:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5034:6:11"}]}]},{"nodeType":"YulBlock","src":"5138:119:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5153:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5167:3:11","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5157:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5184:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5219:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5230:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5215:3:11"},"nodeType":"YulFunctionCall","src":"5215:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5239:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5194:20:11"},"nodeType":"YulFunctionCall","src":"5194:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5184:6:11"}]}]}]},"name":"abi_decode_tuple_t_struct$_Bet_$1648_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4812:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4823:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4835:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4843:6:11","type":""}],"src":"4746:518:11"},{"body":{"nodeType":"YulBlock","src":"5302:28:11","statements":[{"nodeType":"YulAssignment","src":"5312:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5319:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5312:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5288:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5298:3:11","type":""}],"src":"5270:60:11"},{"body":{"nodeType":"YulBlock","src":"5396:82:11","statements":[{"nodeType":"YulAssignment","src":"5406:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5464:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5446:17:11"},"nodeType":"YulFunctionCall","src":"5446:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5437:8:11"},"nodeType":"YulFunctionCall","src":"5437:34:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5419:17:11"},"nodeType":"YulFunctionCall","src":"5419:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5406:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5376:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5386:9:11","type":""}],"src":"5336:142:11"},{"body":{"nodeType":"YulBlock","src":"5544:66:11","statements":[{"nodeType":"YulAssignment","src":"5554:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5598:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5567:30:11"},"nodeType":"YulFunctionCall","src":"5567:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5554:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5524:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5534:9:11","type":""}],"src":"5484:126:11"},{"body":{"nodeType":"YulBlock","src":"5689:66:11","statements":[{"nodeType":"YulAssignment","src":"5699:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5743:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5712:30:11"},"nodeType":"YulFunctionCall","src":"5712:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5699:9:11"}]}]},"name":"convert_t_contract$_Bank_$1628_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5669:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5679:9:11","type":""}],"src":"5616:139:11"},{"body":{"nodeType":"YulBlock","src":"5839:79:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5856:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5905:5:11"}],"functionName":{"name":"convert_t_contract$_Bank_$1628_to_t_address","nodeType":"YulIdentifier","src":"5861:43:11"},"nodeType":"YulFunctionCall","src":"5861:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5849:6:11"},"nodeType":"YulFunctionCall","src":"5849:63:11"},"nodeType":"YulExpressionStatement","src":"5849:63:11"}]},"name":"abi_encode_t_contract$_Bank_$1628_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5827:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5834:3:11","type":""}],"src":"5761:157:11"},{"body":{"nodeType":"YulBlock","src":"6035:137:11","statements":[{"nodeType":"YulAssignment","src":"6045:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6057:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6068:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6053:3:11"},"nodeType":"YulFunctionCall","src":"6053:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6045:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6138:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6162:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6147:3:11"},"nodeType":"YulFunctionCall","src":"6147:17:11"}],"functionName":{"name":"abi_encode_t_contract$_Bank_$1628_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6081:56:11"},"nodeType":"YulFunctionCall","src":"6081:84:11"},"nodeType":"YulExpressionStatement","src":"6081:84:11"}]},"name":"abi_encode_tuple_t_contract$_Bank_$1628__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6007:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6019:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6030:4:11","type":""}],"src":"5924:248:11"},{"body":{"nodeType":"YulBlock","src":"6278:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"6324:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6326:77:11"},"nodeType":"YulFunctionCall","src":"6326:79:11"},"nodeType":"YulExpressionStatement","src":"6326:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6299:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6308:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6295:3:11"},"nodeType":"YulFunctionCall","src":"6295:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6320:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6291:3:11"},"nodeType":"YulFunctionCall","src":"6291:32:11"},"nodeType":"YulIf","src":"6288:119:11"},{"nodeType":"YulBlock","src":"6417:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6432:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6446:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6436:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6461:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6496:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6507:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:11"},"nodeType":"YulFunctionCall","src":"6492:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6516:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6471:20:11"},"nodeType":"YulFunctionCall","src":"6471:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6461:6:11"}]}]},{"nodeType":"YulBlock","src":"6544:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6559:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6573:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6563:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6589:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6624:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6635:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6620:3:11"},"nodeType":"YulFunctionCall","src":"6620:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6644:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6599:20:11"},"nodeType":"YulFunctionCall","src":"6599:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6589:6:11"}]}]},{"nodeType":"YulBlock","src":"6672:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6687:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6701:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6691:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6717:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6752:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6763:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6748:3:11"},"nodeType":"YulFunctionCall","src":"6748:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6772:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6727:20:11"},"nodeType":"YulFunctionCall","src":"6727:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6717:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6232:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6243:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6255:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6263:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6271:6:11","type":""}],"src":"6178:619:11"},{"body":{"nodeType":"YulBlock","src":"6901:124:11","statements":[{"nodeType":"YulAssignment","src":"6911:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6923:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6934:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6919:3:11"},"nodeType":"YulFunctionCall","src":"6919:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6911:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6991:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7004:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7015:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7000:3:11"},"nodeType":"YulFunctionCall","src":"7000:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6947:43:11"},"nodeType":"YulFunctionCall","src":"6947:71:11"},"nodeType":"YulExpressionStatement","src":"6947:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6873:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6885:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6896:4:11","type":""}],"src":"6803:222:11"},{"body":{"nodeType":"YulBlock","src":"7097:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"7143:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7145:77:11"},"nodeType":"YulFunctionCall","src":"7145:79:11"},"nodeType":"YulExpressionStatement","src":"7145:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7118:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7127:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7114:3:11"},"nodeType":"YulFunctionCall","src":"7114:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7139:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7110:3:11"},"nodeType":"YulFunctionCall","src":"7110:32:11"},"nodeType":"YulIf","src":"7107:119:11"},{"nodeType":"YulBlock","src":"7236:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7251:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7265:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7255:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7280:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7326:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:11"},"nodeType":"YulFunctionCall","src":"7311:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7335:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7290:20:11"},"nodeType":"YulFunctionCall","src":"7290:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7280:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7067:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7078:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7090:6:11","type":""}],"src":"7031:329:11"},{"body":{"nodeType":"YulBlock","src":"7394:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7411:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7414:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7404:6:11"},"nodeType":"YulFunctionCall","src":"7404:88:11"},"nodeType":"YulExpressionStatement","src":"7404:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7508:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7511:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7501:6:11"},"nodeType":"YulFunctionCall","src":"7501:15:11"},"nodeType":"YulExpressionStatement","src":"7501:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7532:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7535:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7525:6:11"},"nodeType":"YulFunctionCall","src":"7525:15:11"},"nodeType":"YulExpressionStatement","src":"7525:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7366:180:11"},{"body":{"nodeType":"YulBlock","src":"7600:362:11","statements":[{"nodeType":"YulAssignment","src":"7610:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7633:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7615:17:11"},"nodeType":"YulFunctionCall","src":"7615:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7610:1:11"}]},{"nodeType":"YulAssignment","src":"7644:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7667:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7649:17:11"},"nodeType":"YulFunctionCall","src":"7649:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7644:1:11"}]},{"nodeType":"YulVariableDeclaration","src":"7678:28:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7701:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"7704:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7697:3:11"},"nodeType":"YulFunctionCall","src":"7697:9:11"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"7682:11:11","type":""}]},{"nodeType":"YulAssignment","src":"7715:41:11","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"7744:11:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7726:17:11"},"nodeType":"YulFunctionCall","src":"7726:30:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7715:7:11"}]},{"body":{"nodeType":"YulBlock","src":"7933:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7935:16:11"},"nodeType":"YulFunctionCall","src":"7935:18:11"},"nodeType":"YulExpressionStatement","src":"7935:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7866:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7859:6:11"},"nodeType":"YulFunctionCall","src":"7859:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7889:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7896:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"7905:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7892:3:11"},"nodeType":"YulFunctionCall","src":"7892:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7886:2:11"},"nodeType":"YulFunctionCall","src":"7886:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7839:2:11"},"nodeType":"YulFunctionCall","src":"7839:83:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7819:6:11"},"nodeType":"YulFunctionCall","src":"7819:113:11"},"nodeType":"YulIf","src":"7816:139:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7583:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"7586:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7592:7:11","type":""}],"src":"7552:410:11"},{"body":{"nodeType":"YulBlock","src":"7996:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8013:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8016:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8006:6:11"},"nodeType":"YulFunctionCall","src":"8006:88:11"},"nodeType":"YulExpressionStatement","src":"8006:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8110:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8113:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8103:6:11"},"nodeType":"YulFunctionCall","src":"8103:15:11"},"nodeType":"YulExpressionStatement","src":"8103:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8134:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8137:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8127:6:11"},"nodeType":"YulFunctionCall","src":"8127:15:11"},"nodeType":"YulExpressionStatement","src":"8127:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7968:180:11"},{"body":{"nodeType":"YulBlock","src":"8188:142:11","statements":[{"nodeType":"YulAssignment","src":"8198:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8221:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8203:17:11"},"nodeType":"YulFunctionCall","src":"8203:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8198:1:11"}]},{"nodeType":"YulAssignment","src":"8232:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8255:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8237:17:11"},"nodeType":"YulFunctionCall","src":"8237:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8232:1:11"}]},{"body":{"nodeType":"YulBlock","src":"8279:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"8281:16:11"},"nodeType":"YulFunctionCall","src":"8281:18:11"},"nodeType":"YulExpressionStatement","src":"8281:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8276:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8269:6:11"},"nodeType":"YulFunctionCall","src":"8269:9:11"},"nodeType":"YulIf","src":"8266:35:11"},{"nodeType":"YulAssignment","src":"8310:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8319:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"8322:1:11"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8315:3:11"},"nodeType":"YulFunctionCall","src":"8315:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8310:1:11"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8177:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"8180:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8186:1:11","type":""}],"src":"8154:176:11"},{"body":{"nodeType":"YulBlock","src":"8462:206:11","statements":[{"nodeType":"YulAssignment","src":"8472:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8484:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8495:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8480:3:11"},"nodeType":"YulFunctionCall","src":"8480:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8472:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8552:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8565:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8576:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8561:3:11"},"nodeType":"YulFunctionCall","src":"8561:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8508:43:11"},"nodeType":"YulFunctionCall","src":"8508:71:11"},"nodeType":"YulExpressionStatement","src":"8508:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8633:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8646:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8657:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8642:3:11"},"nodeType":"YulFunctionCall","src":"8642:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8589:43:11"},"nodeType":"YulFunctionCall","src":"8589:72:11"},"nodeType":"YulExpressionStatement","src":"8589:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8426:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8438:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8446:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8457:4:11","type":""}],"src":"8336:332:11"},{"body":{"nodeType":"YulBlock","src":"8729:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8746:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8769:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8751:17:11"},"nodeType":"YulFunctionCall","src":"8751:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:11"},"nodeType":"YulFunctionCall","src":"8739:37:11"},"nodeType":"YulExpressionStatement","src":"8739:37:11"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8717:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8724:3:11","type":""}],"src":"8674:108:11"},{"body":{"nodeType":"YulBlock","src":"8843:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8860:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8883:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8865:17:11"},"nodeType":"YulFunctionCall","src":"8865:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8853:6:11"},"nodeType":"YulFunctionCall","src":"8853:37:11"},"nodeType":"YulExpressionStatement","src":"8853:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8831:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8838:3:11","type":""}],"src":"8788:108:11"},{"body":{"nodeType":"YulBlock","src":"9060:932:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9070:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9086:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9091:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9082:3:11"},"nodeType":"YulFunctionCall","src":"9082:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9074:4:11","type":""}]},{"nodeType":"YulBlock","src":"9106:165:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9142:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9172:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9179:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:11"},"nodeType":"YulFunctionCall","src":"9168:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9162:5:11"},"nodeType":"YulFunctionCall","src":"9162:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9146:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9232:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9250:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9255:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9246:3:11"},"nodeType":"YulFunctionCall","src":"9246:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9198:33:11"},"nodeType":"YulFunctionCall","src":"9198:63:11"},"nodeType":"YulExpressionStatement","src":"9198:63:11"}]},{"nodeType":"YulBlock","src":"9281:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9320:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9350:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9357:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9346:3:11"},"nodeType":"YulFunctionCall","src":"9346:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9340:5:11"},"nodeType":"YulFunctionCall","src":"9340:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9324:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9410:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9428:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9433:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9424:3:11"},"nodeType":"YulFunctionCall","src":"9424:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9376:33:11"},"nodeType":"YulFunctionCall","src":"9376:63:11"},"nodeType":"YulExpressionStatement","src":"9376:63:11"}]},{"nodeType":"YulBlock","src":"9459:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9498:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9528:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9535:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9524:3:11"},"nodeType":"YulFunctionCall","src":"9524:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9518:5:11"},"nodeType":"YulFunctionCall","src":"9518:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9502:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9588:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9606:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9611:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9602:3:11"},"nodeType":"YulFunctionCall","src":"9602:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9554:33:11"},"nodeType":"YulFunctionCall","src":"9554:63:11"},"nodeType":"YulExpressionStatement","src":"9554:63:11"}]},{"nodeType":"YulBlock","src":"9637:167:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9675:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9705:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9712:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9701:3:11"},"nodeType":"YulFunctionCall","src":"9701:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9695:5:11"},"nodeType":"YulFunctionCall","src":"9695:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9679:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9765:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9788:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9779:3:11"},"nodeType":"YulFunctionCall","src":"9779:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9731:33:11"},"nodeType":"YulFunctionCall","src":"9731:63:11"},"nodeType":"YulExpressionStatement","src":"9731:63:11"}]},{"nodeType":"YulBlock","src":"9814:171:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9856:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9886:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9893:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9882:3:11"},"nodeType":"YulFunctionCall","src":"9882:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9876:5:11"},"nodeType":"YulFunctionCall","src":"9876:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9860:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9946:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9964:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9969:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9960:3:11"},"nodeType":"YulFunctionCall","src":"9960:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9912:33:11"},"nodeType":"YulFunctionCall","src":"9912:63:11"},"nodeType":"YulExpressionStatement","src":"9912:63:11"}]}]},"name":"abi_encode_t_struct$_Bet_$1648_memory_ptr_to_t_struct$_Bet_$1648_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9047:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9054:3:11","type":""}],"src":"8952:1040:11"},{"body":{"nodeType":"YulBlock","src":"10138:167:11","statements":[{"nodeType":"YulAssignment","src":"10148:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10160:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10171:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10156:3:11"},"nodeType":"YulFunctionCall","src":"10156:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10148:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10271:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10284:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10295:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10280:3:11"},"nodeType":"YulFunctionCall","src":"10280:17:11"}],"functionName":{"name":"abi_encode_t_struct$_Bet_$1648_memory_ptr_to_t_struct$_Bet_$1648_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10185:85:11"},"nodeType":"YulFunctionCall","src":"10185:113:11"},"nodeType":"YulExpressionStatement","src":"10185:113:11"}]},"name":"abi_encode_tuple_t_struct$_Bet_$1648_memory_ptr__to_t_struct$_Bet_$1648_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10110:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10122:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10133:4:11","type":""}],"src":"9998:307:11"},{"body":{"nodeType":"YulBlock","src":"10339:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10356:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10359:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10349:6:11"},"nodeType":"YulFunctionCall","src":"10349:88:11"},"nodeType":"YulExpressionStatement","src":"10349:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10453:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10456:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10446:6:11"},"nodeType":"YulFunctionCall","src":"10446:15:11"},"nodeType":"YulExpressionStatement","src":"10446:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10477:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10480:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10470:6:11"},"nodeType":"YulFunctionCall","src":"10470:15:11"},"nodeType":"YulExpressionStatement","src":"10470:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10311:180:11"},{"body":{"nodeType":"YulBlock","src":"10540:190:11","statements":[{"nodeType":"YulAssignment","src":"10550:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10577:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10559:17:11"},"nodeType":"YulFunctionCall","src":"10559:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10550:5:11"}]},{"body":{"nodeType":"YulBlock","src":"10673:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10675:16:11"},"nodeType":"YulFunctionCall","src":"10675:18:11"},"nodeType":"YulExpressionStatement","src":"10675:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10598:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10605:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10595:2:11"},"nodeType":"YulFunctionCall","src":"10595:77:11"},"nodeType":"YulIf","src":"10592:103:11"},{"nodeType":"YulAssignment","src":"10704:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10715:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10722:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10711:3:11"},"nodeType":"YulFunctionCall","src":"10711:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10704:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10526:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10536:3:11","type":""}],"src":"10497:233:11"},{"body":{"nodeType":"YulBlock","src":"10783:32:11","statements":[{"nodeType":"YulAssignment","src":"10793:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10804:5:11"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"10793:7:11"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10765:5:11","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"10775:7:11","type":""}],"src":"10736:79:11"},{"body":{"nodeType":"YulBlock","src":"10904:74:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10921:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10964:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10946:17:11"},"nodeType":"YulFunctionCall","src":"10946:24:11"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"10926:19:11"},"nodeType":"YulFunctionCall","src":"10926:45:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10914:6:11"},"nodeType":"YulFunctionCall","src":"10914:58:11"},"nodeType":"YulExpressionStatement","src":"10914:58:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10892:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10899:3:11","type":""}],"src":"10821:157:11"},{"body":{"nodeType":"YulBlock","src":"11128:253:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11201:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11210:3:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11139:61:11"},"nodeType":"YulFunctionCall","src":"11139:75:11"},"nodeType":"YulExpressionStatement","src":"11139:75:11"},{"nodeType":"YulAssignment","src":"11223:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11234:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11239:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11230:3:11"},"nodeType":"YulFunctionCall","src":"11230:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11223:3:11"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11314:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11323:3:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11252:61:11"},"nodeType":"YulFunctionCall","src":"11252:75:11"},"nodeType":"YulExpressionStatement","src":"11252:75:11"},{"nodeType":"YulAssignment","src":"11336:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11347:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11352:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11343:3:11"},"nodeType":"YulFunctionCall","src":"11343:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11336:3:11"}]},{"nodeType":"YulAssignment","src":"11365:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"11372:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11365:3:11"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11099:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11105:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11113:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11124:3:11","type":""}],"src":"10984:397:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct Roulette.Bet\n    function abi_decode_t_struct$_Bet_$1648_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // beter\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // bet_type\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // bet_time\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // bet_num\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // bet_amounts\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Bet_$1648_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Bet_$1648_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Bank_$1628_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Bank_$1628_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Bank_$1628_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Bank_$1628__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Bank_$1628_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Roulette.Bet -> struct Roulette.Bet\n    function abi_encode_t_struct$_Bet_$1648_memory_ptr_to_t_struct$_Bet_$1648_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // beter\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // bet_type\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // bet_time\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // bet_num\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // bet_amounts\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Bet_$1648_memory_ptr__to_t_struct$_Bet_$1648_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Bet_$1648_memory_ptr_to_t_struct$_Bet_$1648_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76CDB03B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x7C68F2B9 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x93E84CD9 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xBBD2E01E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EA JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x22AF00FA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x27A4FDB8 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x3EB380A0 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4E2BB54F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x172 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x2EB JUMPI PUSH2 0x2B3 DUP3 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x2BE JUMPI PUSH1 0x1 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND DUP4 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x2E6 JUMPI PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x32D JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x327 JUMPI PUSH1 0x2 DUP3 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x326 JUMPI PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x32D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33B PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH2 0x939 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF968954E CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x3E9DB003453AE07FD7AB02F4E21DAB9FC7545EC5476B9823D2B4C3BAF223323F DUP2 PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x548 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH1 0x25 PUSH2 0x9FD JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 PUSH2 0x645 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5A8 JUMPI PUSH2 0x5A7 PUSH2 0x1030 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC4B3365 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x1030 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F2 SWAP3 SWAP2 SWAP1 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x79166ED647EA7E9EFA3DE349320BB43E28D04637A86429193D882D8F0E01FB43 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x759 JUMPI PUSH2 0x758 PUSH2 0x1030 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x79A SWAP3 SWAP2 SWAP1 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7A8 JUMP JUMPDEST JUMPDEST POP DUP1 DUP1 PUSH2 0x7B4 SWAP1 PUSH2 0x105F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x582 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E3 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x855 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85E DUP2 PUSH2 0x939 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP3 LT DUP1 PUSH2 0x87E JUMPI POP PUSH1 0x12 DUP3 GT DUP1 ISZERO PUSH2 0x87D JUMPI POP PUSH1 0x1D DUP3 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x89A JUMPI PUSH1 0x1 PUSH1 0x2 DUP4 PUSH2 0x892 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST EQ SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0xA3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D8 PUSH2 0x517 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x937 JUMPI PUSH2 0x8FB PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PREVRANDAO TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA13 SWAP3 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x5 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xA69 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x5 ADD PUSH2 0xA6A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE9 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB30 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP3 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB74 DUP2 PUSH2 0xB59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xBAB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xBB8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xBC5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC45 DUP3 PUSH2 0xBFC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0xC0D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 PUSH2 0xAC7 JUMP JUMPDEST SWAP1 POP PUSH2 0xC83 DUP3 DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC91 DUP2 PUSH2 0xB59 JUMP JUMPDEST DUP2 EQ PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCAE DUP2 PUSH2 0xC88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0xBF7 JUMP JUMPDEST JUMPDEST PUSH2 0xCD4 PUSH1 0xA0 PUSH2 0xC6D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCE4 DUP5 DUP3 DUP6 ADD PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xCF8 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xD0C DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xD20 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xD34 DUP5 DUP3 DUP6 ADD PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH2 0xD56 PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xD76 DUP6 DUP3 DUP7 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 PUSH2 0xDA0 PUSH2 0xD9B DUP5 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB7 DUP3 PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC9 DUP3 PUSH2 0xDAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD9 DUP2 PUSH2 0xDBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE21 DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE32 DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE43 DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0xAD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8C DUP5 DUP3 DUP6 ADD PUSH2 0xC9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDA DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEE8 DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEFF JUMPI PUSH2 0xEFE PUSH2 0xE95 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF40 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4B DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xF06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF7B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xF88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF98 DUP2 PUSH2 0xB59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFA7 DUP2 PUSH2 0xAD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xFC3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xF8F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFD6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFE9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFFC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x100F PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF9E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106A DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x109C JUMPI PUSH2 0x109B PUSH2 0xE95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C2 PUSH2 0x10BD DUP3 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 DUP6 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x10E4 DUP3 DUP5 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH16 0x5882364B950C9486A1848DB31681999C STOP ADDMOD 0xDE ADDRESS 0xD MSIZE 0x4B XOR 0xA8 SWAP7 PUSH4 0x8C0BCE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"100:2592:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;388:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:472;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;191:16:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;605:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2066:624:10;;;:::i;:::-;;960:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;365:17:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;388:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1052:93::-;1099:7;1124;:14;;;;1117:21;;1052:93;:::o;1588:472::-;1658:7;1695:1;1679:3;:12;;;:17;1676:360;;1766:14;1774:5;1766:7;:14::i;:::-;:22;;1787:1;1766:22;;;1783:1;1766:22;1750:39;;:3;:11;;;:39;1746:104;;1834:1;1816:3;:15;;;:19;;;;:::i;:::-;1809:26;;;;1746:104;1676:360;;;1885:1;1869:3;:12;;;:17;1865:171;;1963:1;1955:5;:9;;;;:::i;:::-;1939:3;:11;;;:26;1935:91;;2010:1;1992:3;:15;;;:19;;;;:::i;:::-;1985:26;;;;1935:91;1865:171;1676:360;2052:1;2045:8;;1588:472;;;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;191:16:10:-;;;;;;;;;;;;;:::o;605:349::-;700:14;717:128;;;;;;;;734:10;717:128;;;;;;758:9;717:128;;;;781:15;717:128;;;;810:8;717:128;;;;832:12;717:128;;;700:145;;856:4;866:3;856:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:4;;;;;;;;;;;:13;;;894:10;906:12;880:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:13;943:3;934:13;;;;;;:::i;:::-;;;;;;;;690:264;605:349;;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2066:624:10:-;1531:13:2;:11;:13::i;:::-;2112::10::1;2128:11;2136:2;2128:7;:11::i;:::-;2112:27;;2149:7;2162:5;2149:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2182:6;2178:485;2194:4;:11;;;;2192:1;:13;2178:485;;;2226:16;2245:26;2256:4;2261:1;2256:7;;;;;;;;:::i;:::-;;;;;;;;;;;;2245:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;2265:5;2245:10;:26::i;:::-;2226:45;;2297:1;2288:8;:10;2285:368;;;2317:4;;;;;;;;;;;:13;;;2331:4;2336:1;2331:7;;;;;;;;:::i;:::-;;;;;;;;;;;;:13;;;;;;;;;;;;2346:8;2317:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2412:32;2420:4;2425:1;2420:7;;;;;;;;:::i;:::-;;;;;;;;;;;;:13;;;;;;;;;;;;2435:8;2412:32;;;;;;;:::i;:::-;;;;;;;;2285:368;;;;2212:451;2207:3;;;;;:::i;:::-;;;;2178:485;;;;2679:4;;2672:11;;;;:::i;:::-;2102:588;2066:624::o:0;960:87::-;1004:7;1029:4;:11;;;;1022:18;;960:87;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1340:243:10:-;1391:4;1418:2;1411:4;:9;:37;;;;1432:2;1425:4;:9;:22;;;;;1445:2;1438:4;:9;1425:22;1411:37;1407:170;;;1514:1;1509;1502:4;:8;;;;:::i;:::-;:13;1495:20;;;;1407:170;1565:1;1560;1553:4;:8;;;;:::i;:::-;:13;1546:20;;1340:243;;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1180:154:10:-;1230:4;1324:3;1285:16;1303:15;1268:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1258:62;;;;;;1253:68;;:74;;;;:::i;:::-;1246:81;;1180:154;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:664::-;1712:4;1750:3;1739:9;1735:19;1727:27;;1764:71;1832:1;1821:9;1817:17;1808:6;1764:71;:::i;:::-;1845:72;1913:2;1902:9;1898:18;1889:6;1845:72;:::i;:::-;1927;1995:2;1984:9;1980:18;1971:6;1927:72;:::i;:::-;2009;2077:2;2066:9;2062:18;2053:6;2009:72;:::i;:::-;2091:73;2159:3;2148:9;2144:19;2135:6;2091:73;:::i;:::-;1507:664;;;;;;;;:::o;2177:222::-;2270:4;2308:2;2297:9;2293:18;2285:26;;2321:71;2389:1;2378:9;2374:17;2365:6;2321:71;:::i;:::-;2177:222;;;;:::o;2405:117::-;2514:1;2511;2504:12;2528:102;2569:6;2620:2;2616:7;2611:2;2604:5;2600:14;2596:28;2586:38;;2528:102;;;:::o;2636:180::-;2684:77;2681:1;2674:88;2781:4;2778:1;2771:15;2805:4;2802:1;2795:15;2822:281;2905:27;2927:4;2905:27;:::i;:::-;2897:6;2893:40;3035:6;3023:10;3020:22;2999:18;2987:10;2984:34;2981:62;2978:88;;;3046:18;;:::i;:::-;2978:88;3086:10;3082:2;3075:22;2865:238;2822:281;;:::o;3109:129::-;3143:6;3170:20;;:::i;:::-;3160:30;;3199:33;3227:4;3219:6;3199:33;:::i;:::-;3109:129;;;:::o;3367:122::-;3440:24;3458:5;3440:24;:::i;:::-;3433:5;3430:35;3420:63;;3479:1;3476;3469:12;3420:63;3367:122;:::o;3495:139::-;3541:5;3579:6;3566:20;3557:29;;3595:33;3622:5;3595:33;:::i;:::-;3495:139;;;;:::o;3667:1073::-;3737:5;3781:4;3769:9;3764:3;3760:19;3756:30;3753:117;;;3789:79;;:::i;:::-;3753:117;3888:21;3904:4;3888:21;:::i;:::-;3879:30;;3969:1;4009:49;4054:3;4045:6;4034:9;4030:22;4009:49;:::i;:::-;4002:4;3995:5;3991:16;3984:75;3919:151;4133:2;4174:49;4219:3;4210:6;4199:9;4195:22;4174:49;:::i;:::-;4167:4;4160:5;4156:16;4149:75;4080:155;4298:2;4339:49;4384:3;4375:6;4364:9;4360:22;4339:49;:::i;:::-;4332:4;4325:5;4321:16;4314:75;4245:155;4462:2;4503:49;4548:3;4539:6;4528:9;4524:22;4503:49;:::i;:::-;4496:4;4489:5;4485:16;4478:75;4410:154;4630:3;4672:49;4717:3;4708:6;4697:9;4693:22;4672:49;:::i;:::-;4665:4;4658:5;4654:16;4647:75;4574:159;3667:1073;;;;:::o;4746:518::-;4835:6;4843;4892:3;4880:9;4871:7;4867:23;4863:33;4860:120;;;4899:79;;:::i;:::-;4860:120;5019:1;5044:74;5110:7;5101:6;5090:9;5086:22;5044:74;:::i;:::-;5034:84;;4990:138;5167:3;5194:53;5239:7;5230:6;5219:9;5215:22;5194:53;:::i;:::-;5184:63;;5138:119;4746:518;;;;;:::o;5270:60::-;5298:3;5319:5;5312:12;;5270:60;;;:::o;5336:142::-;5386:9;5419:53;5437:34;5446:24;5464:5;5446:24;:::i;:::-;5437:34;:::i;:::-;5419:53;:::i;:::-;5406:66;;5336:142;;;:::o;5484:126::-;5534:9;5567:37;5598:5;5567:37;:::i;:::-;5554:50;;5484:126;;;:::o;5616:139::-;5679:9;5712:37;5743:5;5712:37;:::i;:::-;5699:50;;5616:139;;;:::o;5761:157::-;5861:50;5905:5;5861:50;:::i;:::-;5856:3;5849:63;5761:157;;:::o;5924:248::-;6030:4;6068:2;6057:9;6053:18;6045:26;;6081:84;6162:1;6151:9;6147:17;6138:6;6081:84;:::i;:::-;5924:248;;;;:::o;6178:619::-;6255:6;6263;6271;6320:2;6308:9;6299:7;6295:23;6291:32;6288:119;;;6326:79;;:::i;:::-;6288:119;6446:1;6471:53;6516:7;6507:6;6496:9;6492:22;6471:53;:::i;:::-;6461:63;;6417:117;6573:2;6599:53;6644:7;6635:6;6624:9;6620:22;6599:53;:::i;:::-;6589:63;;6544:118;6701:2;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6672:118;6178:619;;;;;:::o;6803:222::-;6896:4;6934:2;6923:9;6919:18;6911:26;;6947:71;7015:1;7004:9;7000:17;6991:6;6947:71;:::i;:::-;6803:222;;;;:::o;7031:329::-;7090:6;7139:2;7127:9;7118:7;7114:23;7110:32;7107:119;;;7145:79;;:::i;:::-;7107:119;7265:1;7290:53;7335:7;7326:6;7315:9;7311:22;7290:53;:::i;:::-;7280:63;;7236:117;7031:329;;;;:::o;7366:180::-;7414:77;7411:1;7404:88;7511:4;7508:1;7501:15;7535:4;7532:1;7525:15;7552:410;7592:7;7615:20;7633:1;7615:20;:::i;:::-;7610:25;;7649:20;7667:1;7649:20;:::i;:::-;7644:25;;7704:1;7701;7697:9;7726:30;7744:11;7726:30;:::i;:::-;7715:41;;7905:1;7896:7;7892:15;7889:1;7886:22;7866:1;7859:9;7839:83;7816:139;;7935:18;;:::i;:::-;7816:139;7600:362;7552:410;;;;:::o;7968:180::-;8016:77;8013:1;8006:88;8113:4;8110:1;8103:15;8137:4;8134:1;8127:15;8154:176;8186:1;8203:20;8221:1;8203:20;:::i;:::-;8198:25;;8237:20;8255:1;8237:20;:::i;:::-;8232:25;;8276:1;8266:35;;8281:18;;:::i;:::-;8266:35;8322:1;8319;8315:9;8310:14;;8154:176;;;;:::o;8336:332::-;8457:4;8495:2;8484:9;8480:18;8472:26;;8508:71;8576:1;8565:9;8561:17;8552:6;8508:71;:::i;:::-;8589:72;8657:2;8646:9;8642:18;8633:6;8589:72;:::i;:::-;8336:332;;;;;:::o;8674:108::-;8751:24;8769:5;8751:24;:::i;:::-;8746:3;8739:37;8674:108;;:::o;8788:::-;8865:24;8883:5;8865:24;:::i;:::-;8860:3;8853:37;8788:108;;:::o;8952:1040::-;9091:4;9086:3;9082:14;9179:4;9172:5;9168:16;9162:23;9198:63;9255:4;9250:3;9246:14;9232:12;9198:63;:::i;:::-;9106:165;9357:4;9350:5;9346:16;9340:23;9376:63;9433:4;9428:3;9424:14;9410:12;9376:63;:::i;:::-;9281:168;9535:4;9528:5;9524:16;9518:23;9554:63;9611:4;9606:3;9602:14;9588:12;9554:63;:::i;:::-;9459:168;9712:4;9705:5;9701:16;9695:23;9731:63;9788:4;9783:3;9779:14;9765:12;9731:63;:::i;:::-;9637:167;9893:4;9886:5;9882:16;9876:23;9912:63;9969:4;9964:3;9960:14;9946:12;9912:63;:::i;:::-;9814:171;9060:932;8952:1040;;:::o;9998:307::-;10133:4;10171:3;10160:9;10156:19;10148:27;;10185:113;10295:1;10284:9;10280:17;10271:6;10185:113;:::i;:::-;9998:307;;;;:::o;10311:180::-;10359:77;10356:1;10349:88;10456:4;10453:1;10446:15;10480:4;10477:1;10470:15;10497:233;10536:3;10559:24;10577:5;10559:24;:::i;:::-;10550:33;;10605:66;10598:5;10595:77;10592:103;;10675:18;;:::i;:::-;10592:103;10722:1;10715:5;10711:13;10704:20;;10497:233;;;:::o;10736:79::-;10775:7;10804:5;10793:16;;10736:79;;;:::o;10821:157::-;10926:45;10946:24;10964:5;10946:24;:::i;:::-;10926:45;:::i;:::-;10921:3;10914:58;10821:157;;:::o;10984:397::-;11124:3;11139:75;11210:3;11201:6;11139:75;:::i;:::-;11239:2;11234:3;11230:12;11223:19;;11252:75;11323:3;11314:6;11252:75;:::i;:::-;11352:2;11347:3;11343:12;11336:19;;11372:3;11365:10;;10984:397;;;;;:::o"},"methodIdentifiers":{"bank()":"76cdb03b","bets(uint256)":"22af00fa","betsLength()":"bbd2e01e","calcWinner((address,uint256,uint256,uint256,uint256),uint256)":"4e2bb54f","getRollLength()":"3eb380a0","owner()":"8da5cb5b","place_bet(uint256,uint256,uint256)":"7c68f2b9","play()":"93e84cd9","renounceOwnership()":"715018a6","rolleds(uint256)":"27a4fdb8","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"beter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bet_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_amounts\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Roulette.Bet\",\"name\":\"bet\",\"type\":\"tuple\"}],\"name\":\"PlaceBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"WinFund\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bank\",\"outputs\":[{\"internalType\":\"contract Bank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bet_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_amounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"beter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bet_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bet_amounts\",\"type\":\"uint256\"}],\"internalType\":\"struct Roulette.Bet\",\"name\":\"bet\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_roll\",\"type\":\"uint256\"}],\"name\":\"calcWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRollLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bet_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bet_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bet_amounts\",\"type\":\"uint256\"}],\"name\":\"place_bet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rolleds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Roulette.sol\":\"Roulette\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0xbfea0b49965210516b3aab62a4bb26bbef7046a0f40c0f264bef5a71e44c2b7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7747c1c7e02f557d72d34f7296fca62a014ba434251d85cbb7f182435834e5c7\",\"dweb:/ipfs/QmQeeyHVsnvdrCvcCsd6o7fGLPR2zjmMqrSmeYgnWTUvnV\"]},\"contracts/Roulette.sol\":{\"keccak256\":\"0xaced300028a2d897e59e3c94257d81d0e5ce91509aa132d9deb7564d985327bf\",\"urls\":[\"bzz-raw://51dbc615e1e6a9c2afded0efe92a93cf57d3a408c6362f9dabb7b77c5c1f5fcb\",\"dweb:/ipfs/QmZiP6Ekau8zgvKQFhq2mLJ742mW4MM4XddY23bN8y79Bq\"]}},\"version\":1}"}}}}}